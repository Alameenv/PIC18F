

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Sep 28 21:55:55 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.42
    41                           ; Generated 13/04/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F458 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  000E74                     __pidataCOMRAM:
    77                           	opt stack 0
    78                           
    79                           ;initializer for gotoXY@F7070
    80  000E74  00                 	db	0
    81  000E75  40                 	db	64
    82  000E76  14                 	db	20
    83  000E77  54                 	db	84
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADCON1	set	4033
    87  0000                     _TRISAbits	set	3986
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _INTCONbits	set	4082
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PORTBbits	set	3969
    92  0000                     _TRISBbits	set	3987
    93  0000                     _PIR1bits	set	3998
    94  0000                     _SSPBUF	set	4041
    95  0000                     _SSPCON2bits	set	4037
    96  0000                     _TRISCbits	set	3988
    97  0000                     _SSPSTAT	set	4039
    98  0000                     _SSPADD	set	4040
    99  0000                     _SSPCON2	set	4037
   100  0000                     _SSPCON1	set	4038
   101  0000                     _ADCON0	set	4034
   102                           
   103                           	psect	smallconst
   104  000600                     __psmallconst:
   105                           	opt stack 0
   106  000600  00                 	db	0
   107  000601                     STR_1:
   108  000601  41                 	db	65	;'A'
   109  000602  44                 	db	68	;'D'
   110  000603  43                 	db	67	;'C'
   111  000604  31                 	db	49	;'1'
   112  000605  3A                 	db	58	;':'
   113  000606  00                 	db	0
   114  000607                     STR_2:
   115  000607  41                 	db	65	;'A'
   116  000608  44                 	db	68	;'D'
   117  000609  43                 	db	67	;'C'
   118  00060A  32                 	db	50	;'2'
   119  00060B  3A                 	db	58	;':'
   120  00060C  00                 	db	0
   121                           
   122                           ; #config settings
   123  00060D  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           	psect	cinit
   126  000D28                     __pcinit:
   127                           	opt stack 0
   128  000D28                     start_initialization:
   129                           	opt stack 0
   130  000D28                     __initialization:
   131                           	opt stack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (4 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135  000D28  0E74               	movlw	low __pidataCOMRAM
   136  000D2A  6EF6               	movwf	tblptrl,c
   137  000D2C  0E0E               	movlw	high __pidataCOMRAM
   138  000D2E  6EF7               	movwf	tblptrh,c
   139  000D30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140  000D32  6EF8               	movwf	tblptru,c
   141  000D34  EE00  F036         	lfsr	0,__pdataCOMRAM
   142  000D38  EE10 F004          	lfsr	1,4
   143  000D3C                     copy_data0:
   144  000D3C  0009               	tblrd		*+
   145  000D3E  CFF5 FFEE          	movff	tablat,postinc0
   146  000D42  50E5               	movf	postdec1,w,c
   147  000D44  50E1               	movf	fsr1l,w,c
   148  000D46  E1FA               	bnz	copy_data0
   149                           
   150                           ; Clear objects allocated to COMRAM (9 bytes)
   151  000D48  EE00  F02D         	lfsr	0,__pbssCOMRAM
   152  000D4C  0E09               	movlw	9
   153  000D4E                     clear_0:
   154  000D4E  6AEE               	clrf	postinc0,c
   155  000D50  06E8               	decf	wreg,f,c
   156  000D52  E1FD               	bnz	clear_0
   157  000D54                     end_of_initialization:
   158                           	opt stack 0
   159  000D54                     __end_of__initialization:
   160                           	opt stack 0
   161  000D54  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   162  000D56  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   163  000D58  0E00               	movlw	low (__Lsmallconst shr (0+16))
   164  000D5A  6EF8               	movwf	tblptru,c
   165  000D5C  0E06               	movlw	high __Lsmallconst
   166  000D5E  6EF7               	movwf	tblptrh,c
   167  000D60  0100               	movlb	0
   168  000D62  EF23  F005         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssCOMRAM
   179  00002D                     __pbssCOMRAM:
   180                           	opt stack 0
   181  00002D                     i2c_lcd_Print_Int@F7085:
   182                           	opt stack 0
   183  00002D                     	ds	5
   184  000032                     _res2:
   185                           	opt stack 0
   186  000032                     	ds	2
   187  000034                     _res1:
   188                           	opt stack 0
   189  000034                     	ds	2
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	dataCOMRAM
   200  000036                     __pdataCOMRAM:
   201                           	opt stack 0
   202  000036                     gotoXY@F7070:
   203                           	opt stack 0
   204  000036                     	ds	4
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	cstackBANK0
   215  000060                     __pcstackBANK0:
   216                           	opt stack 0
   217  000060                     ??_i2c_lcd_Write:
   218  000060                     delay_loop@nCount:
   219                           	opt stack 0
   220  000060                     I2C_Master_Init@clk:
   221                           	opt stack 0
   222                           
   223                           ; 4 bytes @ 0x0
   224  000060                     	ds	1
   225  000061                     i2c_lcd_Write@cmd:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x1
   229  000061                     	ds	1
   230  000062                     expanderWrite@cmdData:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x2
   234  000062                     	ds	1
   235  000063                     pulseWrite@portPulse:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x3
   239  000063                     	ds	1
   240  000064                     sendByte@mode:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x4
   244  000064                     	ds	1
   245  000065                     sendByte@swap_mask_Lower_nibble:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x5
   249  000065                     	ds	1
   250  000066                     sendByte@mask_lower_nibble:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x6
   254  000066                     	ds	1
   255  000067                     sendByte@byte:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x7
   259  000067                     	ds	1
   260  000068                     sendByte@_data:
   261                           	opt stack 0
   262                           
   263                           ; 1 bytes @ 0x8
   264  000068                     	ds	1
   265  000069                     gotoXY@Y:
   266                           	opt stack 0
   267  000069                     i2c_lcd_Print@str:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x9
   271  000069                     	ds	1
   272  00006A                     ??_gotoXY:
   273                           
   274                           ; 1 bytes @ 0xA
   275  00006A                     	ds	1
   276  00006B                     gotoXY@LcdType:
   277                           	opt stack 0
   278                           
   279                           ; 4 bytes @ 0xB
   280  00006B                     	ds	4
   281  00006F                     gotoXY@X:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0xF
   285  00006F                     	ds	1
   286  000070                     ??_main:
   287                           
   288                           ; 1 bytes @ 0x10
   289  000070                     	ds	2
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	cstackCOMRAM
   300  000001                     __pcstackCOMRAM:
   301                           	opt stack 0
   302  000001                     ??i2_i2c_lcd_Write:
   303  000001                     ?_readADC:
   304                           	opt stack 0
   305  000001                     ?___wmul:
   306                           	opt stack 0
   307  000001                     ?___awdiv:
   308                           	opt stack 0
   309  000001                     ?___awmod:
   310                           	opt stack 0
   311  000001                     ___wmul@multiplier:
   312                           	opt stack 0
   313  000001                     ___awdiv@dividend:
   314                           	opt stack 0
   315  000001                     ___awmod@dividend:
   316                           	opt stack 0
   317  000001                     i2delay_loop@nCount:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x0
   321  000001                     	ds	1
   322  000002                     i2i2c_lcd_Write@cmd:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x1
   326  000002                     	ds	1
   327  000003                     ??_readADC:
   328  000003                     i2expanderWrite@cmdData:
   329                           	opt stack 0
   330  000003                     ___wmul@multiplicand:
   331                           	opt stack 0
   332  000003                     ___awdiv@divisor:
   333                           	opt stack 0
   334  000003                     ___awmod@divisor:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338  000003                     	ds	1
   339  000004                     i2pulseWrite@portPulse:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x3
   343  000004                     	ds	1
   344  000005                     readADC@channel:
   345                           	opt stack 0
   346  000005                     ___awdiv@counter:
   347                           	opt stack 0
   348  000005                     ___awmod@counter:
   349                           	opt stack 0
   350  000005                     i2sendByte@mode:
   351                           	opt stack 0
   352  000005                     ___wmul@product:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x4
   356  000005                     	ds	1
   357  000006                     ___awdiv@sign:
   358                           	opt stack 0
   359  000006                     ___awmod@sign:
   360                           	opt stack 0
   361  000006                     i2sendByte@swap_mask_Lower_nibble:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365  000006                     	ds	1
   366  000007                     i2sendByte@mask_lower_nibble:
   367                           	opt stack 0
   368  000007                     ___awdiv@quotient:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x6
   372  000007                     	ds	1
   373  000008                     i2sendByte@byte:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x7
   377  000008                     	ds	1
   378  000009                     i2sendByte@_data:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x8
   382  000009                     	ds	1
   383  00000A                     i2gotoXY@Y:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x9
   387  00000A                     	ds	1
   388  00000B                     ??i2_gotoXY:
   389                           
   390                           ; 1 bytes @ 0xA
   391  00000B                     	ds	1
   392  00000C                     i2gotoXY@LcdType:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0xB
   396  00000C                     	ds	4
   397  000010                     i2gotoXY@X:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xF
   401  000010                     	ds	1
   402  000011                     i2c_lcd_Print_Int@Y:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x10
   406  000011                     	ds	1
   407  000012                     i2c_lcd_Print_Int@val:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x11
   411  000012                     	ds	2
   412  000014                     i2c_lcd_Print_Int@numOfDigits:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x13
   416  000014                     	ds	1
   417  000015                     i2c_lcd_Print_Int@str:
   418                           	opt stack 0
   419                           
   420                           ; 5 bytes @ 0x14
   421  000015                     	ds	5
   422  00001A                     i2c_lcd_Print_Int@X:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x19
   426  00001A                     	ds	1
   427  00001B                     i2c_lcd_Print_Int@j:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x1A
   431  00001B                     	ds	1
   432  00001C                     i2c_lcd_Print_Int@i:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x1B
   436  00001C                     	ds	1
   437  00001D                     ??_ADC_ISR:
   438                           
   439                           ; 1 bytes @ 0x1C
   440  00001D                     	ds	2
   441  00001F                     ??_high_isr:
   442                           
   443                           ; 1 bytes @ 0x1E
   444  00001F                     	ds	14
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 26 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  2  133[None  ] int 
   466 ;; Registers used:
   467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   473 ;;      Params:         0       0       0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0
   475 ;;      Temps:          0       2       0       0       0       0       0
   476 ;;      Totals:         0       2       0       0       0       0       0
   477 ;;Total ram usage:        2 bytes
   478 ;; Hardware stack levels required when called:   13
   479 ;; This function calls:
   480 ;;		_ADC_Init
   481 ;;		_gotoXY
   482 ;;		_i2c_lcd_Init
   483 ;;		_i2c_lcd_Print
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text0
   490  000A46                     __ptext0:
   491                           	opt stack 0
   492  000A46                     _main:
   493                           	opt stack 0
   494  000A46  FFFF               	dw	65535	; assembler added errata NOP
   495                           
   496                           ;main.c: 27: TRISBbits.TRISB4 = 0;
   497                           
   498                           ;incstack = 0
   499  000A48  9893               	bcf	3987,4,c	;volatile
   500                           
   501                           ;main.c: 28: PORTBbits.RB4 = 0;
   502  000A4A  9881               	bcf	3969,4,c	;volatile
   503                           
   504                           ;main.c: 30: i2c_lcd_Init();
   505  000A4C  EC5E  F005         	call	_i2c_lcd_Init	;wreg free
   506                           
   507                           ;main.c: 32: gotoXY(1,1);
   508  000A50  0E01               	movlw	1
   509  000A52  0100               	movlb	0	; () banked
   510  000A54  6F69               	movwf	gotoXY@Y& (0+255),b
   511  000A56  0E01               	movlw	1
   512  000A58  EC24  F006         	call	_gotoXY
   513                           
   514                           ;main.c: 33: i2c_lcd_Print("ADC1:");
   515  000A5C  0E01               	movlw	low STR_1
   516  000A5E  0100               	movlb	0	; () banked
   517  000A60  6F69               	movwf	i2c_lcd_Print@str& (0+255),b
   518  000A62  0E06               	movlw	high STR_1
   519  000A64  0100               	movlb	0	; () banked
   520  000A66  6F6A               	movwf	(i2c_lcd_Print@str+1)& (0+255),b
   521  000A68  EC74  F006         	call	_i2c_lcd_Print	;wreg free
   522                           
   523                           ;main.c: 34: gotoXY(1,2);
   524  000A6C  0E02               	movlw	2
   525  000A6E  0100               	movlb	0	; () banked
   526  000A70  6F69               	movwf	gotoXY@Y& (0+255),b
   527  000A72  0E01               	movlw	1
   528  000A74  EC24  F006         	call	_gotoXY
   529                           
   530                           ;main.c: 35: i2c_lcd_Print("ADC2:");
   531  000A78  0E07               	movlw	low STR_2
   532  000A7A  0100               	movlb	0	; () banked
   533  000A7C  6F69               	movwf	i2c_lcd_Print@str& (0+255),b
   534  000A7E  0E06               	movlw	high STR_2
   535  000A80  0100               	movlb	0	; () banked
   536  000A82  6F6A               	movwf	(i2c_lcd_Print@str+1)& (0+255),b
   537  000A84  EC74  F006         	call	_i2c_lcd_Print	;wreg free
   538                           
   539                           ;main.c: 38: ADC_Init();
   540  000A88  EC28  F007         	call	_ADC_Init	;wreg free
   541                           
   542                           ;main.c: 41: PIR1bits.ADIF = 0;
   543  000A8C  9C9E               	bcf	3998,6,c	;volatile
   544                           
   545                           ;main.c: 42: PIE1bits.ADIE = 1;
   546  000A8E  8C9D               	bsf	3997,6,c	;volatile
   547                           
   548                           ;main.c: 43: INTCONbits.PEIE = 1;
   549  000A90  8CF2               	bsf	intcon,6,c	;volatile
   550                           
   551                           ;main.c: 44: INTCONbits.GIE = 1;
   552  000A92  8EF2               	bsf	intcon,7,c	;volatile
   553                           
   554                           ;main.c: 45: ADCON0bits.GO = 1;
   555  000A94  84C2               	bsf	4034,2,c	;volatile
   556  000A96                     l1785:
   557  000A96  FFFF               	dw	65535	; assembler added errata NOP
   558                           
   559                           ;main.c: 48: PORTBbits.RB4 ^= 1;
   560  000A98  7881               	btg	3969,4,c	;volatile
   561                           
   562                           ;main.c: 49: _delay((unsigned long)((500)*(10e6/4000.0)));
   563  000A9A  0E05               	movlw	5
   564  000A9C  0100               	movlb	0	; () banked
   565  000A9E  6F71               	movwf	(??_main+1)& (0+255),b
   566  000AA0  0EC3               	movlw	195
   567  000AA2  0100               	movlb	0	; () banked
   568  000AA4  6F70               	movwf	??_main& (0+255),b
   569  000AA6  0E4E               	movlw	78
   570  000AA8                     u1227:
   571  000AA8  FFFF               	dw	65535	; errata NOP
   572  000AAA  2EE8               	decfsz	wreg,f,c
   573  000AAC  D7FD               	bra	u1227
   574  000AAE  2F70               	decfsz	??_main& (0+255),f,b
   575  000AB0  D7FB               	bra	u1227
   576  000AB2  2F71               	decfsz	(??_main+1)& (0+255),f,b
   577  000AB4  D7F9               	bra	u1227
   578  000AB6  D000               	nop2	
   579  000AB8  F000               	nop	
   580  000ABA  D7ED               	goto	l1785
   581  000ABC                     __end_of_main:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           intcon	equ	0xFF2
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           
   593 ;; *************** function _i2c_lcd_Print *****************
   594 ;; Defined at:
   595 ;;		line 198 in file "i2c_lcd_pic.h"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  str             2    9[BANK0 ] PTR unsigned char 
   598 ;;		 -> STR_2(6), STR_1(6), 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   610 ;;      Params:         0       2       0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0
   613 ;;      Totals:         0       2       0       0       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:   12
   617 ;; This function calls:
   618 ;;		_sendByte
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text1
   625  000CE8                     __ptext1:
   626                           	opt stack 0
   627  000CE8                     _i2c_lcd_Print:
   628                           	opt stack 0
   629  000CE8  FFFF               	dw	65535	; assembler added errata NOP
   630                           
   631                           ;i2c_lcd_pic.h: 199: while(*str ){
   632                           
   633                           ;incstack = 0
   634  000CEA  D010               	goto	l1725
   635  000CEC                     l1721:
   636  000CEC  FFFF               	dw	65535	; assembler added errata NOP
   637                           
   638                           ;i2c_lcd_pic.h: 200: sendByte( *str++ , 1 );
   639  000CEE  0E01               	movlw	1
   640  000CF0  0100               	movlb	0	; () banked
   641  000CF2  6F64               	movwf	sendByte@mode& (0+255),b
   642  000CF4  C069  FFF6         	movff	i2c_lcd_Print@str,tblptrl
   643  000CF8  C06A  FFF7         	movff	i2c_lcd_Print@str+1,tblptrh
   644  000CFC                     	if	0	;tblptru may be non-zero
   645  000CFC                     	endif
   646  000CFC                     	if	0	;tblptru may be non-zero
   647  000CFC                     	endif
   648  000CFC  0008               	tblrd		*
   649  000CFE  FFFF               	dw	65535	; errata NOP
   650  000D00  50F5               	movf	tablat,w,c
   651  000D02  EC94  F003         	call	_sendByte
   652  000D06  0100               	movlb	0	; () banked
   653  000D08  4B69               	infsnz	i2c_lcd_Print@str& (0+255),f,b
   654  000D0A  2B6A               	incf	(i2c_lcd_Print@str+1)& (0+255),f,b
   655  000D0C                     l1725:
   656  000D0C  FFFF               	dw	65535	; assembler added errata NOP
   657  000D0E  C069  FFF6         	movff	i2c_lcd_Print@str,tblptrl
   658  000D12  C06A  FFF7         	movff	i2c_lcd_Print@str+1,tblptrh
   659  000D16                     	if	0	;tblptru may be non-zero
   660  000D16                     	endif
   661  000D16                     	if	0	;tblptru may be non-zero
   662  000D16                     	endif
   663  000D16  0008               	tblrd		*
   664  000D18  FFFF               	dw	65535	; errata NOP
   665  000D1A  50F5               	movf	tablat,w,c
   666  000D1C  0900               	iorlw	0
   667  000D1E  B4D8               	btfsc	status,2,c
   668  000D20  0012               	return		;funcret
   669  000D22  FFFF               	dw	65535	; assembler added errata NOP
   670  000D24  D7E3               	goto	l1721
   671  000D26  FFFF               	dw	65535	; errata NOP
   672  000D28                     __end_of_i2c_lcd_Print:
   673                           	opt stack 0
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           intcon	equ	0xFF2
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           postdec1	equ	0xFE5
   682                           fsr1l	equ	0xFE1
   683                           status	equ	0xFD8
   684                           
   685 ;; *************** function _i2c_lcd_Init *****************
   686 ;; Defined at:
   687 ;;		line 185 in file "i2c_lcd_pic.h"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   701 ;;      Params:         0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:   12
   708 ;; This function calls:
   709 ;;		_I2C_Master_Init
   710 ;;		_delay_loop
   711 ;;		_sendByte
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  000ABC                     __ptext2:
   719                           	opt stack 0
   720  000ABC                     _i2c_lcd_Init:
   721                           	opt stack 0
   722  000ABC  FFFF               	dw	65535	; assembler added errata NOP
   723                           
   724                           ;i2c_lcd_pic.h: 186: I2C_Master_Init(100000);
   725                           
   726                           ;incstack = 0
   727  000ABE  0EA0               	movlw	160
   728  000AC0  0100               	movlb	0	; () banked
   729  000AC2  6F60               	movwf	I2C_Master_Init@clk& (0+255),b
   730  000AC4  0E86               	movlw	134
   731  000AC6  6F61               	movwf	(I2C_Master_Init@clk+1)& (0+255),b
   732  000AC8  0E01               	movlw	1
   733  000ACA  6F62               	movwf	(I2C_Master_Init@clk+2)& (0+255),b
   734  000ACC  0E00               	movlw	0
   735  000ACE  6F63               	movwf	(I2C_Master_Init@clk+3)& (0+255),b
   736  000AD0  EC11  F007         	call	_I2C_Master_Init	;wreg free
   737                           
   738                           ;i2c_lcd_pic.h: 188: delay_loop( 0x000F );
   739  000AD4  0E00               	movlw	0
   740  000AD6  0100               	movlb	0	; () banked
   741  000AD8  6F61               	movwf	(delay_loop@nCount+1)& (0+255),b
   742  000ADA  0E0F               	movlw	15
   743  000ADC  6F60               	movwf	delay_loop@nCount& (0+255),b
   744  000ADE  ECF2  F006         	call	_delay_loop	;wreg free
   745                           
   746                           ;i2c_lcd_pic.h: 189: sendByte( 0x28 , 0 );
   747  000AE2  0E00               	movlw	0
   748  000AE4  0100               	movlb	0	; () banked
   749  000AE6  6F64               	movwf	sendByte@mode& (0+255),b
   750  000AE8  0E28               	movlw	40
   751  000AEA  EC94  F003         	call	_sendByte
   752                           
   753                           ;i2c_lcd_pic.h: 190: sendByte( 0x06 , 0 );
   754  000AEE  0E00               	movlw	0
   755  000AF0  0100               	movlb	0	; () banked
   756  000AF2  6F64               	movwf	sendByte@mode& (0+255),b
   757  000AF4  0E06               	movlw	6
   758  000AF6  EC94  F003         	call	_sendByte
   759                           
   760                           ;i2c_lcd_pic.h: 191: sendByte( 0x02 , 0 );
   761  000AFA  0E00               	movlw	0
   762  000AFC  0100               	movlb	0	; () banked
   763  000AFE  6F64               	movwf	sendByte@mode& (0+255),b
   764  000B00  0E02               	movlw	2
   765  000B02  EC94  F003         	call	_sendByte
   766                           
   767                           ;i2c_lcd_pic.h: 192: sendByte( 0x01 , 0 );
   768  000B06  0E00               	movlw	0
   769  000B08  0100               	movlb	0	; () banked
   770  000B0A  6F64               	movwf	sendByte@mode& (0+255),b
   771  000B0C  0E01               	movlw	1
   772  000B0E  EC94  F003         	call	_sendByte
   773                           
   774                           ;i2c_lcd_pic.h: 193: sendByte( 0b00001000 | 0b00000010 , 0 );
   775  000B12  0E00               	movlw	0
   776  000B14  0100               	movlb	0	; () banked
   777  000B16  6F64               	movwf	sendByte@mode& (0+255),b
   778  000B18  0E0A               	movlw	10
   779  000B1A  EC94  F003         	call	_sendByte
   780                           
   781                           ;i2c_lcd_pic.h: 194: sendByte( 0b00001100 | 0b00000010 , 0 );
   782  000B1E  0E00               	movlw	0
   783  000B20  0100               	movlb	0	; () banked
   784  000B22  6F64               	movwf	sendByte@mode& (0+255),b
   785  000B24  0E0E               	movlw	14
   786  000B26  EC94  F003         	call	_sendByte
   787  000B2A  0012               	return		;funcret
   788  000B2C  FFFF               	dw	65535	; errata NOP
   789  000B2E                     __end_of_i2c_lcd_Init:
   790                           	opt stack 0
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           postdec1	equ	0xFE5
   799                           fsr1l	equ	0xFE1
   800                           status	equ	0xFD8
   801                           
   802 ;; *************** function _I2C_Master_Init *****************
   803 ;; Defined at:
   804 ;;		line 78 in file "i2c_lcd_pic.h"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  clk             4    0[BANK0 ] const unsigned long 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   818 ;;      Params:         0       4       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0
   821 ;;      Totals:         0       4       0       0       0       0       0
   822 ;;Total ram usage:        4 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    8
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_i2c_lcd_Init
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text3
   833  000E22                     __ptext3:
   834                           	opt stack 0
   835  000E22                     _I2C_Master_Init:
   836                           	opt stack 0
   837  000E22  FFFF               	dw	65535	; assembler added errata NOP
   838                           
   839                           ;i2c_lcd_pic.h: 86: SSPCON1 = 0b00101000;
   840                           
   841                           ;incstack = 0
   842  000E24  0E28               	movlw	40
   843  000E26  6EC6               	movwf	4038,c	;volatile
   844                           
   845                           ;i2c_lcd_pic.h: 87: SSPCON2 = 0;
   846  000E28  0E00               	movlw	0
   847  000E2A  6EC5               	movwf	4037,c	;volatile
   848                           
   849                           ;i2c_lcd_pic.h: 88: SSPADD = 0x18;
   850  000E2C  0E18               	movlw	24
   851  000E2E  6EC8               	movwf	4040,c	;volatile
   852                           
   853                           ;i2c_lcd_pic.h: 89: SSPSTAT = 0;
   854  000E30  0E00               	movlw	0
   855  000E32  6EC7               	movwf	4039,c	;volatile
   856                           
   857                           ;i2c_lcd_pic.h: 90: TRISCbits.RC3 = 1;
   858  000E34  8694               	bsf	3988,3,c	;volatile
   859                           
   860                           ;i2c_lcd_pic.h: 91: TRISCbits.RC4 = 1;
   861  000E36  8894               	bsf	3988,4,c	;volatile
   862  000E38  0012               	return		;funcret
   863  000E3A  FFFF               	dw	65535	; errata NOP
   864  000E3C                     __end_of_I2C_Master_Init:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           intcon	equ	0xFF2
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1l	equ	0xFE1
   875                           status	equ	0xFD8
   876                           
   877 ;; *************** function _gotoXY *****************
   878 ;; Defined at:
   879 ;;		line 204 in file "i2c_lcd_pic.h"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  X               1    wreg     unsigned char 
   882 ;;  Y               1    9[BANK0 ] unsigned char 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  X               1   15[BANK0 ] unsigned char 
   885 ;;  LcdType         4   11[BANK0 ] unsigned char [4]
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   895 ;;      Params:         0       1       0       0       0       0       0
   896 ;;      Locals:         0       5       0       0       0       0       0
   897 ;;      Temps:          0       1       0       0       0       0       0
   898 ;;      Totals:         0       7       0       0       0       0       0
   899 ;;Total ram usage:        7 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:   12
   902 ;; This function calls:
   903 ;;		_sendByte
   904 ;; This function is called by:
   905 ;;		_main
   906 ;;		_getChar
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text4
   911  000C48                     __ptext4:
   912                           	opt stack 0
   913  000C48                     _gotoXY:
   914                           	opt stack 0
   915  000C48  FFFF               	dw	65535	; assembler added errata NOP
   916                           
   917                           ;incstack = 0
   918                           ;gotoXY@X stored from wreg
   919  000C4A  0100               	movlb	0	; () banked
   920  000C4C  6F6F               	movwf	gotoXY@X& (0+255),b
   921                           
   922                           ;i2c_lcd_pic.h: 206: uint8_t LcdType[ 4 ] = { 0 , 64 , 20 , 84 };
   923  000C4E  C036  F06B         	movff	gotoXY@F7070,gotoXY@LcdType
   924  000C52  C037  F06C         	movff	gotoXY@F7070+1,gotoXY@LcdType+1
   925  000C56  C038  F06D         	movff	gotoXY@F7070+2,gotoXY@LcdType+2
   926  000C5A  C039  F06E         	movff	gotoXY@F7070+3,gotoXY@LcdType+3
   927                           
   928                           ;i2c_lcd_pic.h: 214: if( X >= 17 ) return;
   929  000C5E  0E10               	movlw	16
   930  000C60  0100               	movlb	0	; () banked
   931  000C62  656F               	cpfsgt	gotoXY@X& (0+255),b
   932  000C64  D001               	goto	l1733
   933  000C66  D018               	goto	l94
   934  000C68                     l1733:
   935  000C68  FFFF               	dw	65535	; assembler added errata NOP
   936                           
   937                           ; BSR set to: 0
   938                           ;i2c_lcd_pic.h: 215: sendByte( (uint8_t)( 0x80 + LcdType[ (uint8_t)( Y - 1) ] + ( X - 1 
      +                          ) ) , 0 );
   939  000C6A  0E00               	movlw	0
   940  000C6C  0100               	movlb	0	; () banked
   941  000C6E  6F64               	movwf	sendByte@mode& (0+255),b
   942  000C70  C069  F06A         	movff	gotoXY@Y,??_gotoXY
   943  000C74  0EFF               	movlw	255
   944  000C76  0100               	movlb	0	; () banked
   945  000C78  276A               	addwf	??_gotoXY& (0+255),f,b
   946  000C7A  0100               	movlb	0	; () banked
   947  000C7C  516A               	movf	??_gotoXY& (0+255),w,b
   948  000C7E  0D01               	mullw	1
   949  000C80  0E6B               	movlw	low gotoXY@LcdType
   950  000C82  24F3               	addwf	prodl,w,c
   951  000C84  6ED9               	movwf	fsr2l,c
   952  000C86  0E00               	movlw	high gotoXY@LcdType
   953  000C88  20F4               	addwfc	prodh,w,c
   954  000C8A  6EDA               	movwf	fsr2h,c
   955  000C8C  50DF               	movf	indf2,w,c
   956  000C8E  0100               	movlb	0	; () banked
   957  000C90  256F               	addwf	gotoXY@X& (0+255),w,b
   958  000C92  0F7F               	addlw	127
   959  000C94  EC94  F003         	call	_sendByte
   960  000C98                     l94:
   961  000C98  FFFF               	dw	65535	; assembler added errata NOP
   962  000C9A  0012               	return		;funcret
   963  000C9C  FFFF               	dw	65535	; errata NOP
   964  000C9E                     __end_of_gotoXY:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           tblptrh	equ	0xFF7
   968                           tblptrl	equ	0xFF6
   969                           tablat	equ	0xFF5
   970                           prodh	equ	0xFF4
   971                           prodl	equ	0xFF3
   972                           intcon	equ	0xFF2
   973                           postinc0	equ	0xFEE
   974                           wreg	equ	0xFE8
   975                           postdec1	equ	0xFE5
   976                           fsr1l	equ	0xFE1
   977                           indf2	equ	0xFDF
   978                           fsr2h	equ	0xFDA
   979                           fsr2l	equ	0xFD9
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _sendByte *****************
   983 ;; Defined at:
   984 ;;		line 139 in file "i2c_lcd_pic.h"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  byte            1    wreg     unsigned char 
   987 ;;  mode            1    4[BANK0 ] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  byte            1    7[BANK0 ] unsigned char 
   990 ;;  _data           1    8[BANK0 ] unsigned char 
   991 ;;  mask_lower_n    1    6[BANK0 ] unsigned char 
   992 ;;  swap_mask_Lo    1    5[BANK0 ] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1002 ;;      Params:         0       1       0       0       0       0       0
  1003 ;;      Locals:         0       4       0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0
  1005 ;;      Totals:         0       5       0       0       0       0       0
  1006 ;;Total ram usage:        5 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:   11
  1009 ;; This function calls:
  1010 ;;		_delay_loop
  1011 ;;		_expanderWrite
  1012 ;;		_pulseWrite
  1013 ;; This function is called by:
  1014 ;;		_i2c_lcd_Init
  1015 ;;		_i2c_lcd_Print
  1016 ;;		_gotoXY
  1017 ;;		_createChar
  1018 ;;		_getChar
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text5
  1023  000728                     __ptext5:
  1024                           	opt stack 0
  1025  000728                     _sendByte:
  1026                           	opt stack 0
  1027  000728  FFFF               	dw	65535	; assembler added errata NOP
  1028                           
  1029                           ;incstack = 0
  1030                           ;sendByte@byte stored from wreg
  1031  00072A  0100               	movlb	0	; () banked
  1032  00072C  6F67               	movwf	sendByte@byte& (0+255),b
  1033                           
  1034                           ;i2c_lcd_pic.h: 141: uint8_t mask_lower_nibble , swap_mask_Lower_nibble , _data;
  1035                           ;i2c_lcd_pic.h: 143: mask_lower_nibble = byte;
  1036  00072E  C067  F066         	movff	sendByte@byte,sendByte@mask_lower_nibble
  1037                           
  1038                           ;i2c_lcd_pic.h: 146: swap_mask_Lower_nibble = (uint8_t)( ( byte << 4 ) & 0xF0 );
  1039  000732  0100               	movlb	0	; () banked
  1040  000734  3967               	swapf	sendByte@byte& (0+255),w,b
  1041  000736  0BF0               	andlw	240
  1042  000738  0BF0               	andlw	240
  1043  00073A  0100               	movlb	0	; () banked
  1044  00073C  6F65               	movwf	sendByte@swap_mask_Lower_nibble& (0+255),b
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;i2c_lcd_pic.h: 148: mask_lower_nibble &= 0xF0;
  1048  00073E  0EF0               	movlw	240
  1049  000740  0100               	movlb	0	; () banked
  1050  000742  1766               	andwf	sendByte@mask_lower_nibble& (0+255),f,b
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;i2c_lcd_pic.h: 150: _data = 0b00000101;
  1054  000744  0E05               	movlw	5
  1055  000746  0100               	movlb	0	; () banked
  1056  000748  6F68               	movwf	sendByte@_data& (0+255),b
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;i2c_lcd_pic.h: 151: _data |= mask_lower_nibble;
  1060  00074A  0100               	movlb	0	; () banked
  1061  00074C  5166               	movf	sendByte@mask_lower_nibble& (0+255),w,b
  1062  00074E  0100               	movlb	0	; () banked
  1063  000750  1368               	iorwf	sendByte@_data& (0+255),f,b
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;i2c_lcd_pic.h: 152: expanderWrite( _data );
  1067  000752  0100               	movlb	0	; () banked
  1068  000754  5168               	movf	sendByte@_data& (0+255),w,b
  1069  000756  EC1E  F007         	call	_expanderWrite
  1070                           
  1071                           ;i2c_lcd_pic.h: 154: if( mode == 0 ){
  1072  00075A  0100               	movlb	0	; () banked
  1073  00075C  5164               	movf	sendByte@mode& (0+255),w,b
  1074  00075E  0100               	movlb	0	; () banked
  1075  000760  A4D8               	btfss	status,2,c
  1076  000762  D006               	goto	l1671
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;i2c_lcd_pic.h: 155: _data &= ~( 0b00000001 ) ;
  1080  000764  0100               	movlb	0	; () banked
  1081  000766  9168               	bcf	sendByte@_data& (0+255),0,b
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;i2c_lcd_pic.h: 156: expanderWrite( _data );
  1085  000768  0100               	movlb	0	; () banked
  1086  00076A  5168               	movf	sendByte@_data& (0+255),w,b
  1087  00076C  EC1E  F007         	call	_expanderWrite
  1088  000770                     l1671:
  1089  000770  FFFF               	dw	65535	; assembler added errata NOP
  1090                           
  1091                           ;i2c_lcd_pic.h: 157: }
  1092                           ;i2c_lcd_pic.h: 158: if( mode == 1 ){
  1093  000772  0100               	movlb	0	; () banked
  1094  000774  0564               	decf	sendByte@mode& (0+255),w,b
  1095  000776  A4D8               	btfss	status,2,c
  1096  000778  D006               	goto	l1677
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;i2c_lcd_pic.h: 159: _data |= ( 0b00000001 ) ;
  1100  00077A  0100               	movlb	0	; () banked
  1101  00077C  8168               	bsf	sendByte@_data& (0+255),0,b
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;i2c_lcd_pic.h: 160: expanderWrite( _data );
  1105  00077E  0100               	movlb	0	; () banked
  1106  000780  5168               	movf	sendByte@_data& (0+255),w,b
  1107  000782  EC1E  F007         	call	_expanderWrite
  1108  000786                     l1677:
  1109  000786  FFFF               	dw	65535	; assembler added errata NOP
  1110                           
  1111                           ;i2c_lcd_pic.h: 161: }
  1112                           ;i2c_lcd_pic.h: 162: pulseWrite( _data );
  1113  000788  0100               	movlb	0	; () banked
  1114  00078A  5168               	movf	sendByte@_data& (0+255),w,b
  1115  00078C  ECB3  F006         	call	_pulseWrite
  1116                           
  1117                           ;i2c_lcd_pic.h: 164: delay_loop( 0x0100 );
  1118  000790  0E01               	movlw	1
  1119  000792  0100               	movlb	0	; () banked
  1120  000794  6F61               	movwf	(delay_loop@nCount+1)& (0+255),b
  1121  000796  0E00               	movlw	0
  1122  000798  6F60               	movwf	delay_loop@nCount& (0+255),b
  1123  00079A  ECF2  F006         	call	_delay_loop	;wreg free
  1124                           
  1125                           ;i2c_lcd_pic.h: 167: _data = 0b00000101;
  1126  00079E  0E05               	movlw	5
  1127  0007A0  0100               	movlb	0	; () banked
  1128  0007A2  6F68               	movwf	sendByte@_data& (0+255),b
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;i2c_lcd_pic.h: 168: _data |= swap_mask_Lower_nibble;
  1132  0007A4  0100               	movlb	0	; () banked
  1133  0007A6  5165               	movf	sendByte@swap_mask_Lower_nibble& (0+255),w,b
  1134  0007A8  0100               	movlb	0	; () banked
  1135  0007AA  1368               	iorwf	sendByte@_data& (0+255),f,b
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;i2c_lcd_pic.h: 169: expanderWrite( _data );
  1139  0007AC  0100               	movlb	0	; () banked
  1140  0007AE  5168               	movf	sendByte@_data& (0+255),w,b
  1141  0007B0  EC1E  F007         	call	_expanderWrite
  1142                           
  1143                           ;i2c_lcd_pic.h: 171: if( mode == 0 ){
  1144  0007B4  0100               	movlb	0	; () banked
  1145  0007B6  5164               	movf	sendByte@mode& (0+255),w,b
  1146  0007B8  0100               	movlb	0	; () banked
  1147  0007BA  A4D8               	btfss	status,2,c
  1148  0007BC  D006               	goto	l1693
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;i2c_lcd_pic.h: 172: _data &= ~( 0b00000001 ) ;
  1152  0007BE  0100               	movlb	0	; () banked
  1153  0007C0  9168               	bcf	sendByte@_data& (0+255),0,b
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;i2c_lcd_pic.h: 173: expanderWrite( _data );
  1157  0007C2  0100               	movlb	0	; () banked
  1158  0007C4  5168               	movf	sendByte@_data& (0+255),w,b
  1159  0007C6  EC1E  F007         	call	_expanderWrite
  1160  0007CA                     l1693:
  1161  0007CA  FFFF               	dw	65535	; assembler added errata NOP
  1162                           
  1163                           ;i2c_lcd_pic.h: 174: }
  1164                           ;i2c_lcd_pic.h: 175: if( mode == 1 ){
  1165  0007CC  0100               	movlb	0	; () banked
  1166  0007CE  0564               	decf	sendByte@mode& (0+255),w,b
  1167  0007D0  A4D8               	btfss	status,2,c
  1168  0007D2  D006               	goto	l1699
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;i2c_lcd_pic.h: 176: _data |= ( 0b00000001 ) ;
  1172  0007D4  0100               	movlb	0	; () banked
  1173  0007D6  8168               	bsf	sendByte@_data& (0+255),0,b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;i2c_lcd_pic.h: 177: expanderWrite( _data );
  1177  0007D8  0100               	movlb	0	; () banked
  1178  0007DA  5168               	movf	sendByte@_data& (0+255),w,b
  1179  0007DC  EC1E  F007         	call	_expanderWrite
  1180  0007E0                     l1699:
  1181  0007E0  FFFF               	dw	65535	; assembler added errata NOP
  1182                           
  1183                           ;i2c_lcd_pic.h: 178: }
  1184                           ;i2c_lcd_pic.h: 179: pulseWrite( _data );
  1185  0007E2  0100               	movlb	0	; () banked
  1186  0007E4  5168               	movf	sendByte@_data& (0+255),w,b
  1187  0007E6  ECB3  F006         	call	_pulseWrite
  1188                           
  1189                           ;i2c_lcd_pic.h: 181: delay_loop( 0x0100 );
  1190  0007EA  0E01               	movlw	1
  1191  0007EC  0100               	movlb	0	; () banked
  1192  0007EE  6F61               	movwf	(delay_loop@nCount+1)& (0+255),b
  1193  0007F0  0E00               	movlw	0
  1194  0007F2  6F60               	movwf	delay_loop@nCount& (0+255),b
  1195  0007F4  ECF2  F006         	call	_delay_loop	;wreg free
  1196  0007F8  0012               	return		;funcret
  1197  0007FA  FFFF               	dw	65535	; errata NOP
  1198  0007FC                     __end_of_sendByte:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           prodh	equ	0xFF4
  1205                           prodl	equ	0xFF3
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           indf2	equ	0xFDF
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _pulseWrite *****************
  1217 ;; Defined at:
  1218 ;;		line 127 in file "i2c_lcd_pic.h"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  portPulse       1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  portPulse       1    3[BANK0 ] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1232 ;;      Params:         0       0       0       0       0       0       0
  1233 ;;      Locals:         0       1       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0
  1235 ;;      Totals:         0       1       0       0       0       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:   10
  1239 ;; This function calls:
  1240 ;;		_delay_loop
  1241 ;;		_expanderWrite
  1242 ;; This function is called by:
  1243 ;;		_sendByte
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text6
  1248  000D66                     __ptext6:
  1249                           	opt stack 0
  1250  000D66                     _pulseWrite:
  1251                           	opt stack 0
  1252  000D66  FFFF               	dw	65535	; assembler added errata NOP
  1253                           
  1254                           ;incstack = 0
  1255                           ;pulseWrite@portPulse stored from wreg
  1256  000D68  0100               	movlb	0	; () banked
  1257  000D6A  6F63               	movwf	pulseWrite@portPulse& (0+255),b
  1258                           
  1259                           ;i2c_lcd_pic.h: 129: portPulse |= 0b00000100 ;
  1260  000D6C  0100               	movlb	0	; () banked
  1261  000D6E  8563               	bsf	pulseWrite@portPulse& (0+255),2,b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;i2c_lcd_pic.h: 130: expanderWrite( portPulse );
  1265  000D70  0100               	movlb	0	; () banked
  1266  000D72  5163               	movf	pulseWrite@portPulse& (0+255),w,b
  1267  000D74  EC1E  F007         	call	_expanderWrite
  1268                           
  1269                           ;i2c_lcd_pic.h: 132: delay_loop( 0x0010 );
  1270  000D78  0E00               	movlw	0
  1271  000D7A  0100               	movlb	0	; () banked
  1272  000D7C  6F61               	movwf	(delay_loop@nCount+1)& (0+255),b
  1273  000D7E  0E10               	movlw	16
  1274  000D80  6F60               	movwf	delay_loop@nCount& (0+255),b
  1275  000D82  ECF2  F006         	call	_delay_loop	;wreg free
  1276                           
  1277                           ;i2c_lcd_pic.h: 134: portPulse &= ~0b00000100;
  1278  000D86  0100               	movlb	0	; () banked
  1279  000D88  9563               	bcf	pulseWrite@portPulse& (0+255),2,b
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;i2c_lcd_pic.h: 135: expanderWrite( portPulse );
  1283  000D8A  0100               	movlb	0	; () banked
  1284  000D8C  5163               	movf	pulseWrite@portPulse& (0+255),w,b
  1285  000D8E  EC1E  F007         	call	_expanderWrite
  1286  000D92  0012               	return		;funcret
  1287  000D94  FFFF               	dw	65535	; errata NOP
  1288  000D96                     __end_of_pulseWrite:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           prodh	equ	0xFF4
  1295                           prodl	equ	0xFF3
  1296                           intcon	equ	0xFF2
  1297                           postinc0	equ	0xFEE
  1298                           wreg	equ	0xFE8
  1299                           postdec1	equ	0xFE5
  1300                           fsr1l	equ	0xFE1
  1301                           indf2	equ	0xFDF
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306 ;; *************** function _expanderWrite *****************
  1307 ;; Defined at:
  1308 ;;		line 103 in file "i2c_lcd_pic.h"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  cmdData         1    wreg     unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  cmdData         1    2[BANK0 ] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1322 ;;      Params:         0       0       0       0       0       0       0
  1323 ;;      Locals:         0       1       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0
  1325 ;;      Totals:         0       1       0       0       0       0       0
  1326 ;;Total ram usage:        1 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    9
  1329 ;; This function calls:
  1330 ;;		_i2c_lcd_Write
  1331 ;; This function is called by:
  1332 ;;		_pulseWrite
  1333 ;;		_sendByte
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text7
  1338  000E3C                     __ptext7:
  1339                           	opt stack 0
  1340  000E3C                     _expanderWrite:
  1341                           	opt stack 0
  1342  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  1343                           
  1344                           ;incstack = 0
  1345                           ;expanderWrite@cmdData stored from wreg
  1346  000E3E  0100               	movlb	0	; () banked
  1347  000E40  6F62               	movwf	expanderWrite@cmdData& (0+255),b
  1348                           
  1349                           ;i2c_lcd_pic.h: 104: i2c_lcd_Write( (uint8_t )( cmdData | 0x08 ) );
  1350  000E42  0100               	movlb	0	; () banked
  1351  000E44  5162               	movf	expanderWrite@cmdData& (0+255),w,b
  1352  000E46  0908               	iorlw	8
  1353  000E48  EC97  F005         	call	_i2c_lcd_Write
  1354  000E4C  0012               	return		;funcret
  1355  000E4E  FFFF               	dw	65535	; errata NOP
  1356  000E50                     __end_of_expanderWrite:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           prodh	equ	0xFF4
  1363                           prodl	equ	0xFF3
  1364                           intcon	equ	0xFF2
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1l	equ	0xFE1
  1369                           indf2	equ	0xFDF
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _i2c_lcd_Write *****************
  1375 ;; Defined at:
  1376 ;;		line 94 in file "i2c_lcd_pic.h"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  cmd             1    wreg     unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  cmd             1    1[BANK0 ] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       0       0       0       0       0       0
  1391 ;;      Locals:         0       1       0       0       0       0       0
  1392 ;;      Temps:          0       1       0       0       0       0       0
  1393 ;;      Totals:         0       2       0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    8
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_expanderWrite
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text8
  1405  000B2E                     __ptext8:
  1406                           	opt stack 0
  1407  000B2E                     _i2c_lcd_Write:
  1408                           	opt stack 0
  1409  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ;incstack = 0
  1412                           ;i2c_lcd_Write@cmd stored from wreg
  1413  000B30  0100               	movlb	0	; () banked
  1414  000B32  6F61               	movwf	i2c_lcd_Write@cmd& (0+255),b
  1415  000B34                     l48:
  1416  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1417  000B36  B4C7               	btfsc	4039,2,c	;volatile
  1418  000B38  D7FD               	goto	l48
  1419  000B3A  CFC5 F060          	movff	4037,??_i2c_lcd_Write	;volatile
  1420  000B3E  0E1F               	movlw	31
  1421  000B40  0100               	movlb	0	; () banked
  1422  000B42  1760               	andwf	??_i2c_lcd_Write& (0+255),f,b
  1423  000B44  A4D8               	btfss	status,2,c
  1424  000B46  D7F6               	goto	l48
  1425                           
  1426                           ; BSR set to: 0
  1427  000B48  80C5               	bsf	4037,0,c	;volatile
  1428  000B4A                     l51:
  1429  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  1430  000B4C  B4C7               	btfsc	4039,2,c	;volatile
  1431  000B4E  D7FD               	goto	l51
  1432  000B50  CFC5 F060          	movff	4037,??_i2c_lcd_Write	;volatile
  1433  000B54  0E1F               	movlw	31
  1434  000B56  0100               	movlb	0	; () banked
  1435  000B58  1760               	andwf	??_i2c_lcd_Write& (0+255),f,b
  1436  000B5A  A4D8               	btfss	status,2,c
  1437  000B5C  D7F6               	goto	l51
  1438                           
  1439                           ; BSR set to: 0
  1440                           
  1441                           ; BSR set to: 0
  1442  000B5E  0E4E               	movlw	78
  1443  000B60  6EC9               	movwf	4041,c	;volatile
  1444  000B62                     l54:
  1445  000B62  FFFF               	dw	65535	; assembler added errata NOP
  1446  000B64  B4C7               	btfsc	4039,2,c	;volatile
  1447  000B66  D7FD               	goto	l54
  1448  000B68  CFC5 F060          	movff	4037,??_i2c_lcd_Write	;volatile
  1449  000B6C  0E1F               	movlw	31
  1450  000B6E  0100               	movlb	0	; () banked
  1451  000B70  1760               	andwf	??_i2c_lcd_Write& (0+255),f,b
  1452  000B72  A4D8               	btfss	status,2,c
  1453  000B74  D7F6               	goto	l54
  1454                           
  1455                           ; BSR set to: 0
  1456  000B76  C061  FFC9         	movff	i2c_lcd_Write@cmd,4041	;volatile
  1457  000B7A                     l57:
  1458  000B7A  FFFF               	dw	65535	; assembler added errata NOP
  1459  000B7C  B4C7               	btfsc	4039,2,c	;volatile
  1460  000B7E  D7FD               	goto	l57
  1461  000B80  CFC5 F060          	movff	4037,??_i2c_lcd_Write	;volatile
  1462  000B84  0E1F               	movlw	31
  1463  000B86  0100               	movlb	0	; () banked
  1464  000B88  1760               	andwf	??_i2c_lcd_Write& (0+255),f,b
  1465  000B8A  A4D8               	btfss	status,2,c
  1466  000B8C  D7F6               	goto	l57
  1467                           
  1468                           ; BSR set to: 0
  1469  000B8E  84C5               	bsf	4037,2,c	;volatile
  1470                           
  1471                           ; BSR set to: 0
  1472  000B90  0012               	return		;funcret
  1473  000B92  FFFF               	dw	65535	; errata NOP
  1474  000B94                     __end_of_i2c_lcd_Write:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           prodh	equ	0xFF4
  1481                           prodl	equ	0xFF3
  1482                           intcon	equ	0xFF2
  1483                           postinc0	equ	0xFEE
  1484                           wreg	equ	0xFE8
  1485                           postdec1	equ	0xFE5
  1486                           fsr1l	equ	0xFE1
  1487                           indf2	equ	0xFDF
  1488                           fsr2h	equ	0xFDA
  1489                           fsr2l	equ	0xFD9
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _delay_loop *****************
  1493 ;; Defined at:
  1494 ;;		line 121 in file "i2c_lcd_pic.h"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  nCount          2    0[BANK0 ] unsigned short 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1508 ;;      Params:         0       2       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0
  1511 ;;      Totals:         0       2       0       0       0       0       0
  1512 ;;Total ram usage:        2 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    8
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_pulseWrite
  1519 ;;		_sendByte
  1520 ;;		_i2c_lcd_Init
  1521 ;;		_createChar
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text9
  1526  000DE4                     __ptext9:
  1527                           	opt stack 0
  1528  000DE4                     _delay_loop:
  1529                           	opt stack 0
  1530  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  1531                           
  1532                           ;i2c_lcd_pic.h: 122: while (nCount != 0){
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;incstack = 0
  1536  000DE6  D005               	goto	l1635
  1537  000DE8                     l1633:
  1538  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  1539                           
  1540                           ;i2c_lcd_pic.h: 123: nCount--;
  1541  000DEA  0100               	movlb	0	; () banked
  1542  000DEC  0760               	decf	delay_loop@nCount& (0+255),f,b
  1543  000DEE  A0D8               	btfss	status,0,c
  1544  000DF0  0761               	decf	(delay_loop@nCount+1)& (0+255),f,b
  1545  000DF2                     l1635:
  1546  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  1547  000DF4  0100               	movlb	0	; () banked
  1548  000DF6  5160               	movf	delay_loop@nCount& (0+255),w,b
  1549  000DF8  0100               	movlb	0	; () banked
  1550  000DFA  1161               	iorwf	(delay_loop@nCount+1)& (0+255),w,b
  1551  000DFC  B4D8               	btfsc	status,2,c
  1552                           
  1553                           ; BSR set to: 0
  1554                           
  1555                           ; BSR set to: 0
  1556  000DFE  0012               	return		;funcret
  1557  000E00  FFFF               	dw	65535	; assembler added errata NOP
  1558  000E02  D7F2               	goto	l1633
  1559  000E04  FFFF               	dw	65535	; errata NOP
  1560  000E06                     __end_of_delay_loop:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           prodh	equ	0xFF4
  1567                           prodl	equ	0xFF3
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           fsr1l	equ	0xFE1
  1573                           indf2	equ	0xFDF
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _ADC_Init *****************
  1579 ;; Defined at:
  1580 ;;		line 54 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    8
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text10
  1609  000E50                     __ptext10:
  1610                           	opt stack 0
  1611  000E50                     _ADC_Init:
  1612                           	opt stack 0
  1613  000E50  FFFF               	dw	65535	; assembler added errata NOP
  1614                           
  1615                           ;main.c: 55: TRISAbits.TRISA0 = 1;
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;incstack = 0
  1619  000E52  8092               	bsf	3986,0,c	;volatile
  1620                           
  1621                           ;main.c: 56: TRISAbits.TRISA1 = 1;
  1622  000E54  8292               	bsf	3986,1,c	;volatile
  1623                           
  1624                           ;main.c: 57: TRISAbits.TRISA3 = 1;
  1625  000E56  8692               	bsf	3986,3,c	;volatile
  1626                           
  1627                           ;main.c: 60: ADCON0 = 0x81;
  1628  000E58  0E81               	movlw	129
  1629  000E5A  6EC2               	movwf	4034,c	;volatile
  1630                           
  1631                           ;main.c: 62: ADCON1 = 0xC5;
  1632  000E5C  0EC5               	movlw	197
  1633  000E5E  6EC1               	movwf	4033,c	;volatile
  1634  000E60  0012               	return		;funcret
  1635  000E62  FFFF               	dw	65535	; errata NOP
  1636  000E64                     __end_of_ADC_Init:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           prodh	equ	0xFF4
  1643                           prodl	equ	0xFF3
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1l	equ	0xFE1
  1649                           indf2	equ	0xFDF
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _high_isr *****************
  1655 ;; Defined at:
  1656 ;;		line 21 in file "main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0
  1672 ;;      Temps:         14       0       0       0       0       0       0
  1673 ;;      Totals:        14       0       0       0       0       0       0
  1674 ;;Total ram usage:       14 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    7
  1677 ;; This function calls:
  1678 ;;		_ADC_ISR
  1679 ;; This function is called by:
  1680 ;;		Interrupt level 2
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	intcode
  1685  000008                     __pintcode:
  1686                           	opt stack 0
  1687  000008                     _high_isr:
  1688                           	opt stack 0
  1689  000008  FFFF               	dw	65535	; assembler added errata NOP
  1690                           
  1691                           ;incstack = 0
  1692  00000A  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1693  00000C  CFFA F01F          	movff	pclath,??_high_isr
  1694  000010  CFFB F020          	movff	pclatu,??_high_isr+1
  1695  000014  CFE9 F021          	movff	fsr0l,??_high_isr+2
  1696  000018  CFEA F022          	movff	fsr0h,??_high_isr+3
  1697  00001C  CFE1 F023          	movff	fsr1l,??_high_isr+4
  1698  000020  CFE2 F024          	movff	fsr1h,??_high_isr+5
  1699  000024  CFD9 F025          	movff	fsr2l,??_high_isr+6
  1700  000028  CFDA F026          	movff	fsr2h,??_high_isr+7
  1701  00002C  CFF3 F027          	movff	prodl,??_high_isr+8
  1702  000030  CFF4 F028          	movff	prodh,??_high_isr+9
  1703  000034  CFF6 F029          	movff	tblptrl,??_high_isr+10
  1704  000038  CFF7 F02A          	movff	tblptrh,??_high_isr+11
  1705  00003C  CFF8 F02B          	movff	tblptru,??_high_isr+12
  1706  000040  CFF5 F02C          	movff	tablat,??_high_isr+13
  1707                           
  1708                           ;main.c: 22: if (PIR1bits.ADIF == 1)
  1709  000044  BC9E               	btfsc	3998,6,c	;volatile
  1710                           
  1711                           ;main.c: 23: ADC_ISR();
  1712  000046  EC96  F004         	call	_ADC_ISR	;wreg free
  1713  00004A  C02C  FFF5         	movff	??_high_isr+13,tablat
  1714  00004E  C02B  FFF8         	movff	??_high_isr+12,tblptru
  1715  000052  C02A  FFF7         	movff	??_high_isr+11,tblptrh
  1716  000056  C029  FFF6         	movff	??_high_isr+10,tblptrl
  1717  00005A  C028  FFF4         	movff	??_high_isr+9,prodh
  1718  00005E  C027  FFF3         	movff	??_high_isr+8,prodl
  1719  000062  C026  FFDA         	movff	??_high_isr+7,fsr2h
  1720  000066  C025  FFD9         	movff	??_high_isr+6,fsr2l
  1721  00006A  C024  FFE2         	movff	??_high_isr+5,fsr1h
  1722  00006E  C023  FFE1         	movff	??_high_isr+4,fsr1l
  1723  000072  C022  FFEA         	movff	??_high_isr+3,fsr0h
  1724  000076  C021  FFE9         	movff	??_high_isr+2,fsr0l
  1725  00007A  C020  FFFB         	movff	??_high_isr+1,pclatu
  1726  00007E  C01F  FFFA         	movff	??_high_isr,pclath
  1727  000082  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1728  000084  0011               	retfie		f
  1729  000086  FFFF               	dw	65535	; errata NOP
  1730  000088                     __end_of_high_isr:
  1731                           	opt stack 0
  1732                           pclatu	equ	0xFFB
  1733                           pclath	equ	0xFFA
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           fsr0h	equ	0xFEA
  1743                           fsr0l	equ	0xFE9
  1744                           wreg	equ	0xFE8
  1745                           postdec1	equ	0xFE5
  1746                           fsr1h	equ	0xFE2
  1747                           fsr1l	equ	0xFE1
  1748                           indf2	equ	0xFDF
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _ADC_ISR *****************
  1754 ;; Defined at:
  1755 ;;		line 81 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1769 ;;      Params:         0       0       0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0
  1771 ;;      Temps:          2       0       0       0       0       0       0
  1772 ;;      Totals:         2       0       0       0       0       0       0
  1773 ;;Total ram usage:        2 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    6
  1776 ;; This function calls:
  1777 ;;		_i2c_lcd_Print_Int
  1778 ;;		_readADC
  1779 ;; This function is called by:
  1780 ;;		_high_isr
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text12
  1785  00092C                     __ptext12:
  1786                           	opt stack 0
  1787  00092C                     _ADC_ISR:
  1788                           	opt stack 0
  1789  00092C  FFFF               	dw	65535	; assembler added errata NOP
  1790                           
  1791                           ;main.c: 82: _delay((unsigned long)((1)*(10e6/4000.0)));
  1792                           
  1793                           ;incstack = 0
  1794  00092E  0E03               	movlw	3
  1795  000930  6E1D               	movwf	??_ADC_ISR& (0+255),c
  1796  000932  0E6F               	movlw	111
  1797  000934                     i2u123_47:
  1798  000934  FFFF               	dw	65535	; errata NOP
  1799  000936  2EE8               	decfsz	wreg,f,c
  1800  000938  D7FD               	bra	i2u123_47
  1801  00093A  2E1D               	decfsz	??_ADC_ISR& (0+255),f,c
  1802  00093C  D7FB               	bra	i2u123_47
  1803                           
  1804                           ;main.c: 84: res1 = readADC( 0 );
  1805  00093E  0E00               	movlw	0
  1806  000940  ECF8  F005         	call	_readADC
  1807  000944  C001  F034         	movff	?_readADC,_res1
  1808  000948  C002  F035         	movff	?_readADC+1,_res1+1
  1809                           
  1810                           ;main.c: 85: i2c_lcd_Print_Int(6,1, res1 ,4);
  1811  00094C  0E01               	movlw	1
  1812  00094E  6E11               	movwf	i2c_lcd_Print_Int@Y,c
  1813  000950  C034  F012         	movff	_res1,i2c_lcd_Print_Int@val
  1814  000954  C035  F013         	movff	_res1+1,i2c_lcd_Print_Int@val+1
  1815  000958  0E04               	movlw	4
  1816  00095A  6E14               	movwf	i2c_lcd_Print_Int@numOfDigits,c
  1817  00095C  0E06               	movlw	6
  1818  00095E  EC07  F003         	call	_i2c_lcd_Print_Int
  1819                           
  1820                           ;main.c: 86: _delay((unsigned long)((100)*(10e6/4000.0)));
  1821  000962  0E01               	movlw	1
  1822  000964  6E1E               	movwf	(??_ADC_ISR+1)& (0+255),c
  1823  000966  0EF4               	movlw	244
  1824  000968  6E1D               	movwf	??_ADC_ISR& (0+255),c
  1825  00096A  0EA8               	movlw	168
  1826  00096C                     i2u124_47:
  1827  00096C  FFFF               	dw	65535	; errata NOP
  1828  00096E  2EE8               	decfsz	wreg,f,c
  1829  000970  D7FD               	bra	i2u124_47
  1830  000972  2E1D               	decfsz	??_ADC_ISR& (0+255),f,c
  1831  000974  D7FB               	bra	i2u124_47
  1832  000976  2E1E               	decfsz	(??_ADC_ISR+1)& (0+255),f,c
  1833  000978  D7F9               	bra	i2u124_47
  1834  00097A  D000               	nop2	
  1835                           
  1836                           ;main.c: 88: res2 = readADC( 1 );
  1837  00097C  0E01               	movlw	1
  1838  00097E  ECF8  F005         	call	_readADC
  1839  000982  C001  F032         	movff	?_readADC,_res2
  1840  000986  C002  F033         	movff	?_readADC+1,_res2+1
  1841                           
  1842                           ;main.c: 89: i2c_lcd_Print_Int(6,2, res2 ,4);
  1843  00098A  0E02               	movlw	2
  1844  00098C  6E11               	movwf	i2c_lcd_Print_Int@Y,c
  1845  00098E  C032  F012         	movff	_res2,i2c_lcd_Print_Int@val
  1846  000992  C033  F013         	movff	_res2+1,i2c_lcd_Print_Int@val+1
  1847  000996  0E04               	movlw	4
  1848  000998  6E14               	movwf	i2c_lcd_Print_Int@numOfDigits,c
  1849  00099A  0E06               	movlw	6
  1850  00099C  EC07  F003         	call	_i2c_lcd_Print_Int
  1851                           
  1852                           ;main.c: 90: _delay((unsigned long)((100)*(10e6/4000.0)));
  1853  0009A0  0E01               	movlw	1
  1854  0009A2  6E1E               	movwf	(??_ADC_ISR+1)& (0+255),c
  1855  0009A4  0EF4               	movlw	244
  1856  0009A6  6E1D               	movwf	??_ADC_ISR& (0+255),c
  1857  0009A8  0EA8               	movlw	168
  1858  0009AA                     i2u125_47:
  1859  0009AA  FFFF               	dw	65535	; errata NOP
  1860  0009AC  2EE8               	decfsz	wreg,f,c
  1861  0009AE  D7FD               	bra	i2u125_47
  1862  0009B0  2E1D               	decfsz	??_ADC_ISR& (0+255),f,c
  1863  0009B2  D7FB               	bra	i2u125_47
  1864  0009B4  2E1E               	decfsz	(??_ADC_ISR+1)& (0+255),f,c
  1865  0009B6  D7F9               	bra	i2u125_47
  1866  0009B8  D000               	nop2	
  1867                           
  1868                           ;main.c: 92: PIR1bits.ADIF = 0;
  1869  0009BA  9C9E               	bcf	3998,6,c	;volatile
  1870                           
  1871                           ;main.c: 93: ADCON0bits.GO = 1;
  1872  0009BC  84C2               	bsf	4034,2,c	;volatile
  1873  0009BE  0012               	return		;funcret
  1874  0009C0  FFFF               	dw	65535	; errata NOP
  1875  0009C2                     __end_of_ADC_ISR:
  1876                           	opt stack 0
  1877                           pclatu	equ	0xFFB
  1878                           pclath	equ	0xFFA
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           prodh	equ	0xFF4
  1884                           prodl	equ	0xFF3
  1885                           intcon	equ	0xFF2
  1886                           postinc0	equ	0xFEE
  1887                           fsr0h	equ	0xFEA
  1888                           fsr0l	equ	0xFE9
  1889                           wreg	equ	0xFE8
  1890                           postdec1	equ	0xFE5
  1891                           fsr1h	equ	0xFE2
  1892                           fsr1l	equ	0xFE1
  1893                           indf2	equ	0xFDF
  1894                           fsr2h	equ	0xFDA
  1895                           fsr2l	equ	0xFD9
  1896                           status	equ	0xFD8
  1897                           
  1898 ;; *************** function _readADC *****************
  1899 ;; Defined at:
  1900 ;;		line 66 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  channel         1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  channel         1    4[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2    0[COMRAM] unsigned short 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         2       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0
  1916 ;;      Temps:          2       0       0       0       0       0       0
  1917 ;;      Totals:         5       0       0       0       0       0       0
  1918 ;;Total ram usage:        5 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_ADC_ISR
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text13
  1928  000BF0                     __ptext13:
  1929                           	opt stack 0
  1930  000BF0                     _readADC:
  1931                           	opt stack 0
  1932  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  1933                           
  1934                           ;incstack = 0
  1935                           ;readADC@channel stored from wreg
  1936  000BF2  6E05               	movwf	readADC@channel,c
  1937                           
  1938                           ;main.c: 67: if(channel > 7)
  1939  000BF4  0E07               	movlw	7
  1940  000BF6  6405               	cpfsgt	readADC@channel,c
  1941  000BF8  D005               	goto	i2l1505
  1942                           
  1943                           ;main.c: 68: return 0;
  1944  000BFA  0E00               	movlw	0
  1945  000BFC  6E02               	movwf	?_readADC+1,c
  1946  000BFE  0E00               	movlw	0
  1947  000C00  6E01               	movwf	?_readADC,c
  1948  000C02  D01F               	goto	i2l144
  1949  000C04                     i2l1505:
  1950  000C04  FFFF               	dw	65535	; assembler added errata NOP
  1951                           
  1952                           ;main.c: 70: ADCON0 = (uint8_t)( ( 0b11000101 & ADCON0 ) | ( channel << 3 ) );
  1953  000C06  C005  F003         	movff	readADC@channel,??_readADC
  1954  000C0A  90D8               	bcf	status,0,c
  1955  000C0C  3603               	rlcf	??_readADC,f,c
  1956  000C0E  90D8               	bcf	status,0,c
  1957  000C10  3603               	rlcf	??_readADC,f,c
  1958  000C12  90D8               	bcf	status,0,c
  1959  000C14  3603               	rlcf	??_readADC,f,c
  1960  000C16  50C2               	movf	4034,w,c	;volatile
  1961  000C18  0BC5               	andlw	197
  1962  000C1A  1003               	iorwf	??_readADC,w,c
  1963  000C1C  6EC2               	movwf	4034,c	;volatile
  1964                           
  1965                           ;main.c: 71: _delay((unsigned long)((5)*(10e6/4000.0)));
  1966  000C1E  0E0D               	movlw	13
  1967  000C20  6E03               	movwf	??_readADC& (0+255),c
  1968  000C22  0E2E               	movlw	46
  1969  000C24                     i2u126_47:
  1970  000C24  FFFF               	dw	65535	; errata NOP
  1971  000C26  2EE8               	decfsz	wreg,f,c
  1972  000C28  D7FD               	bra	i2u126_47
  1973  000C2A  2E03               	decfsz	??_readADC& (0+255),f,c
  1974  000C2C  D7FB               	bra	i2u126_47
  1975                           
  1976                           ;main.c: 73: ADCON0bits.GO = 1;
  1977  000C2E  84C2               	bsf	4034,2,c	;volatile
  1978                           
  1979                           ;main.c: 78: return (uint16_t)( (ADRESH << 8 ) + ADRESL );
  1980  000C30  50C4               	movf	4036,w,c	;volatile
  1981  000C32  6E04               	movwf	(??_readADC+1)& (0+255),c
  1982  000C34  6A03               	clrf	??_readADC& (0+255),c
  1983  000C36  50C3               	movf	4035,w,c	;volatile
  1984  000C38  2403               	addwf	??_readADC,w,c
  1985  000C3A  6E01               	movwf	?_readADC,c
  1986  000C3C  0E00               	movlw	0
  1987  000C3E  2004               	addwfc	??_readADC+1,w,c
  1988  000C40  6E02               	movwf	?_readADC+1,c
  1989  000C42                     i2l144:
  1990  000C42  FFFF               	dw	65535	; assembler added errata NOP
  1991  000C44  0012               	return		;funcret
  1992  000C46  FFFF               	dw	65535	; errata NOP
  1993  000C48                     __end_of_readADC:
  1994                           	opt stack 0
  1995                           pclatu	equ	0xFFB
  1996                           pclath	equ	0xFFA
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           fsr0h	equ	0xFEA
  2006                           fsr0l	equ	0xFE9
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           indf2	equ	0xFDF
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _i2c_lcd_Print_Int *****************
  2017 ;; Defined at:
  2018 ;;		line 235 in file "i2c_lcd_pic.h"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  X               1    wreg     unsigned char 
  2021 ;;  Y               1   16[COMRAM] unsigned char 
  2022 ;;  val             2   17[COMRAM] int 
  2023 ;;  numOfDigits     1   19[COMRAM] unsigned char 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  X               1   25[COMRAM] unsigned char 
  2026 ;;  str             5   20[COMRAM] unsigned char [5]
  2027 ;;  i               1   27[COMRAM] unsigned char 
  2028 ;;  j               1   26[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2038 ;;      Params:         4       0       0       0       0       0       0
  2039 ;;      Locals:         8       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0
  2041 ;;      Totals:        12       0       0       0       0       0       0
  2042 ;;Total ram usage:       12 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    5
  2045 ;; This function calls:
  2046 ;;		___awdiv
  2047 ;;		___awmod
  2048 ;;		___wmul
  2049 ;;		i2_gotoXY
  2050 ;;		i2_sendByte
  2051 ;; This function is called by:
  2052 ;;		_ADC_ISR
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text14
  2057  00060E                     __ptext14:
  2058                           	opt stack 0
  2059  00060E                     _i2c_lcd_Print_Int:
  2060                           	opt stack 0
  2061  00060E  FFFF               	dw	65535	; assembler added errata NOP
  2062                           
  2063                           ;incstack = 0
  2064                           ;i2c_lcd_Print_Int@X stored from wreg
  2065  000610  6E1A               	movwf	i2c_lcd_Print_Int@X,c
  2066                           
  2067                           ;i2c_lcd_pic.h: 237: char str[5] = {0,0,0,0,0};
  2068  000612  EE20  F02D         	lfsr	2,i2c_lcd_Print_Int@F7085
  2069  000616  EE10  F015         	lfsr	1,i2c_lcd_Print_Int@str
  2070  00061A  0E04               	movlw	4
  2071  00061C                     i2u92_41:
  2072  00061C  CFDB FFE3          	movff	plusw2,plusw1
  2073  000620  06E8               	decf	wreg,f,c
  2074  000622  E2FC               	bc	i2u92_41
  2075                           
  2076                           ;i2c_lcd_pic.h: 238: uint8_t i = 4 , j = 0;
  2077  000624  0E04               	movlw	4
  2078  000626  6E1C               	movwf	i2c_lcd_Print_Int@i,c
  2079  000628  0E00               	movlw	0
  2080  00062A  6E1B               	movwf	i2c_lcd_Print_Int@j,c
  2081                           
  2082                           ;i2c_lcd_pic.h: 240: gotoXY( X , Y );
  2083  00062C  C011  F00A         	movff	i2c_lcd_Print_Int@Y,i2gotoXY@Y
  2084  000630  501A               	movf	i2c_lcd_Print_Int@X,w,c
  2085  000632  EC4F  F006         	call	i2_gotoXY
  2086                           
  2087                           ;i2c_lcd_pic.h: 242: if( val < 0 )
  2088  000636  AE13               	btfss	i2c_lcd_Print_Int@val+1,7,c
  2089  000638  D013               	goto	i2l1469
  2090                           
  2091                           ;i2c_lcd_pic.h: 243: {
  2092                           ;i2c_lcd_pic.h: 244: sendByte( '-' , 1 );
  2093  00063A  0E01               	movlw	1
  2094  00063C  6E05               	movwf	i2sendByte@mode,c
  2095  00063E  0E2D               	movlw	45
  2096  000640  ECFE  F003         	call	i2_sendByte
  2097                           
  2098                           ;i2c_lcd_pic.h: 245: val *= ( - 1 );
  2099  000644  C012  F001         	movff	i2c_lcd_Print_Int@val,___wmul@multiplier
  2100  000648  C013  F002         	movff	i2c_lcd_Print_Int@val+1,___wmul@multiplier+1
  2101  00064C  0EFF               	movlw	255
  2102  00064E  6E04               	movwf	___wmul@multiplicand+1,c
  2103  000650  6803               	setf	___wmul@multiplicand,c
  2104  000652  ECCB  F006         	call	___wmul	;wreg free
  2105  000656  C001  F012         	movff	?___wmul,i2c_lcd_Print_Int@val
  2106  00065A  C002  F013         	movff	?___wmul+1,i2c_lcd_Print_Int@val+1
  2107                           
  2108                           ;i2c_lcd_pic.h: 246: }
  2109  00065E  D02B               	goto	i2l1477
  2110  000660                     i2l1469:
  2111  000660  FFFF               	dw	65535	; assembler added errata NOP
  2112                           
  2113                           ;i2c_lcd_pic.h: 247: else
  2114                           ;i2c_lcd_pic.h: 248: {
  2115                           ;i2c_lcd_pic.h: 249: sendByte( ' ', 1 );
  2116  000662  0E01               	movlw	1
  2117  000664  6E05               	movwf	i2sendByte@mode,c
  2118  000666  0E20               	movlw	32
  2119  000668  ECFE  F003         	call	i2_sendByte
  2120                           
  2121                           ;i2c_lcd_pic.h: 250: }
  2122                           ;i2c_lcd_pic.h: 252: while( val )
  2123  00066C  D024               	goto	i2l1477
  2124  00066E                     i2l1471:
  2125  00066E  FFFF               	dw	65535	; assembler added errata NOP
  2126                           
  2127                           ;i2c_lcd_pic.h: 253: {
  2128                           ;i2c_lcd_pic.h: 254: str[i] = (uint8_t)( val % 10);
  2129  000670  501C               	movf	i2c_lcd_Print_Int@i,w,c
  2130  000672  0D01               	mullw	1
  2131  000674  0E15               	movlw	low i2c_lcd_Print_Int@str
  2132  000676  24F3               	addwf	prodl,w,c
  2133  000678  6ED9               	movwf	fsr2l,c
  2134  00067A  0E00               	movlw	high i2c_lcd_Print_Int@str
  2135  00067C  20F4               	addwfc	prodh,w,c
  2136  00067E  6EDA               	movwf	fsr2h,c
  2137  000680  C012  F001         	movff	i2c_lcd_Print_Int@val,___awmod@dividend
  2138  000684  C013  F002         	movff	i2c_lcd_Print_Int@val+1,___awmod@dividend+1
  2139  000688  0E00               	movlw	0
  2140  00068A  6E04               	movwf	___awmod@divisor+1,c
  2141  00068C  0E0A               	movlw	10
  2142  00068E  6E03               	movwf	___awmod@divisor,c
  2143  000690  ECE1  F004         	call	___awmod	;wreg free
  2144  000694  5001               	movf	?___awmod,w,c
  2145  000696  6EDF               	movwf	indf2,c
  2146                           
  2147                           ;i2c_lcd_pic.h: 255: val = val / 10;
  2148  000698  C012  F001         	movff	i2c_lcd_Print_Int@val,___awdiv@dividend
  2149  00069C  C013  F002         	movff	i2c_lcd_Print_Int@val+1,___awdiv@dividend+1
  2150  0006A0  0E00               	movlw	0
  2151  0006A2  6E04               	movwf	___awdiv@divisor+1,c
  2152  0006A4  0E0A               	movlw	10
  2153  0006A6  6E03               	movwf	___awdiv@divisor,c
  2154  0006A8  EC4A  F004         	call	___awdiv	;wreg free
  2155  0006AC  C001  F012         	movff	?___awdiv,i2c_lcd_Print_Int@val
  2156  0006B0  C002  F013         	movff	?___awdiv+1,i2c_lcd_Print_Int@val+1
  2157                           
  2158                           ;i2c_lcd_pic.h: 256: i--;
  2159  0006B4  061C               	decf	i2c_lcd_Print_Int@i,f,c
  2160  0006B6                     i2l1477:
  2161  0006B6  FFFF               	dw	65535	; assembler added errata NOP
  2162  0006B8  5012               	movf	i2c_lcd_Print_Int@val,w,c
  2163  0006BA  1013               	iorwf	i2c_lcd_Print_Int@val+1,w,c
  2164  0006BC  A4D8               	btfss	status,2,c
  2165  0006BE  D7D7               	goto	i2l1471
  2166                           
  2167                           ;i2c_lcd_pic.h: 257: }
  2168                           ;i2c_lcd_pic.h: 259: if( numOfDigits == 0 )
  2169  0006C0  5014               	movf	i2c_lcd_Print_Int@numOfDigits,w,c
  2170  0006C2  B4D8               	btfsc	status,2,c
  2171  0006C4  D003               	goto	i2l1485
  2172  0006C6  D00F               	goto	i2l1487
  2173  0006C8                     i2l1483:
  2174  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  2175  0006CA  2A1B               	incf	i2c_lcd_Print_Int@j,f,c
  2176  0006CC                     i2l1485:
  2177  0006CC  FFFF               	dw	65535	; assembler added errata NOP
  2178  0006CE  501B               	movf	i2c_lcd_Print_Int@j,w,c
  2179  0006D0  0D01               	mullw	1
  2180  0006D2  0E15               	movlw	low i2c_lcd_Print_Int@str
  2181  0006D4  24F3               	addwf	prodl,w,c
  2182  0006D6  6ED9               	movwf	fsr2l,c
  2183  0006D8  0E00               	movlw	high i2c_lcd_Print_Int@str
  2184  0006DA  20F4               	addwfc	prodh,w,c
  2185  0006DC  6EDA               	movwf	fsr2h,c
  2186  0006DE  50DF               	movf	indf2,w,c
  2187  0006E0  A4D8               	btfss	status,2,c
  2188  0006E2  D006               	goto	i2l1489
  2189  0006E4  D7F1               	goto	i2l1483
  2190  0006E6                     i2l1487:
  2191  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  2192                           
  2193                           ;i2c_lcd_pic.h: 261: else
  2194                           ;i2c_lcd_pic.h: 262: j = (uint8_t)( sizeof(str) - numOfDigits );
  2195  0006E8  5014               	movf	i2c_lcd_Print_Int@numOfDigits,w,c
  2196  0006EA  0800               	sublw	0
  2197  0006EC  0F05               	addlw	5
  2198  0006EE  6E1B               	movwf	i2c_lcd_Print_Int@j,c
  2199  0006F0                     i2l1489:
  2200  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  2201                           
  2202                           ;i2c_lcd_pic.h: 264: for( i = j; i < 5; i++ )
  2203  0006F2  C01B  F01C         	movff	i2c_lcd_Print_Int@j,i2c_lcd_Print_Int@i
  2204  0006F6  FFFF               	dw	65535	; assembler added errata NOP
  2205  0006F8  0E04               	movlw	4
  2206  0006FA  641C               	cpfsgt	i2c_lcd_Print_Int@i,c
  2207  0006FC  D001               	goto	i2l1493
  2208  0006FE  D011               	goto	i2l119
  2209  000700                     i2l1493:
  2210  000700  FFFF               	dw	65535	; assembler added errata NOP
  2211                           
  2212                           ;i2c_lcd_pic.h: 265: {
  2213                           ;i2c_lcd_pic.h: 266: sendByte( '0' + str[i] , 1 );
  2214  000702  0E01               	movlw	1
  2215  000704  6E05               	movwf	i2sendByte@mode,c
  2216  000706  501C               	movf	i2c_lcd_Print_Int@i,w,c
  2217  000708  0D01               	mullw	1
  2218  00070A  0E15               	movlw	low i2c_lcd_Print_Int@str
  2219  00070C  24F3               	addwf	prodl,w,c
  2220  00070E  6ED9               	movwf	fsr2l,c
  2221  000710  0E00               	movlw	high i2c_lcd_Print_Int@str
  2222  000712  20F4               	addwfc	prodh,w,c
  2223  000714  6EDA               	movwf	fsr2h,c
  2224  000716  50DF               	movf	indf2,w,c
  2225  000718  0F30               	addlw	48
  2226  00071A  ECFE  F003         	call	i2_sendByte
  2227  00071E  2A1C               	incf	i2c_lcd_Print_Int@i,f,c
  2228  000720  D7EA               	goto	L1
  2229  000722                     i2l119:
  2230  000722  FFFF               	dw	65535	; assembler added errata NOP
  2231  000724  0012               	return		;funcret
  2232  000726  FFFF               	dw	65535	; errata NOP
  2233  000728                     __end_of_i2c_lcd_Print_Int:
  2234                           	opt stack 0
  2235                           pclatu	equ	0xFFB
  2236                           pclath	equ	0xFFA
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           prodh	equ	0xFF4
  2242                           prodl	equ	0xFF3
  2243                           intcon	equ	0xFF2
  2244                           postinc0	equ	0xFEE
  2245                           fsr0h	equ	0xFEA
  2246                           fsr0l	equ	0xFE9
  2247                           wreg	equ	0xFE8
  2248                           postdec1	equ	0xFE5
  2249                           plusw1	equ	0xFE3
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           plusw2	equ	0xFDB
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function i2_gotoXY *****************
  2259 ;; Defined at:
  2260 ;;		line 204 in file "i2c_lcd_pic.h"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  X               1    wreg     unsigned char 
  2263 ;;  Y               1    9[COMRAM] unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  X               1   15[COMRAM] unsigned char 
  2266 ;;  gotoXY          4   11[COMRAM] unsigned char [4]
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2276 ;;      Params:         1       0       0       0       0       0       0
  2277 ;;      Locals:         5       0       0       0       0       0       0
  2278 ;;      Temps:          1       0       0       0       0       0       0
  2279 ;;      Totals:         7       0       0       0       0       0       0
  2280 ;;Total ram usage:        7 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    4
  2283 ;; This function calls:
  2284 ;;		i2_sendByte
  2285 ;; This function is called by:
  2286 ;;		_i2c_lcd_Print_Int
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text15
  2291  000C9E                     __ptext15:
  2292                           	opt stack 0
  2293  000C9E                     i2_gotoXY:
  2294                           	opt stack 0
  2295  000C9E  FFFF               	dw	65535	; assembler added errata NOP
  2296                           
  2297                           ;incstack = 0
  2298                           ;i2gotoXY@X stored from wreg
  2299  000CA0  6E10               	movwf	i2gotoXY@X,c
  2300                           
  2301                           ;i2c_lcd_pic.h: 206: uint8_t LcdType[ 4 ] = { 0 , 64 , 20 , 84 };
  2302  000CA2  C036  F00C         	movff	gotoXY@F7070,i2gotoXY@LcdType
  2303  000CA6  C037  F00D         	movff	gotoXY@F7070+1,i2gotoXY@LcdType+1
  2304  000CAA  C038  F00E         	movff	gotoXY@F7070+2,i2gotoXY@LcdType+2
  2305  000CAE  C039  F00F         	movff	gotoXY@F7070+3,i2gotoXY@LcdType+3
  2306                           
  2307                           ;i2c_lcd_pic.h: 214: if( X >= 17 ) return;
  2308  000CB2  0E10               	movlw	16
  2309  000CB4  6410               	cpfsgt	i2gotoXY@X,c
  2310  000CB6  D001               	goto	i2l1397
  2311  000CB8  D014               	goto	i2l94
  2312  000CBA                     i2l1397:
  2313  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  2314                           
  2315                           ;i2c_lcd_pic.h: 215: sendByte( (uint8_t)( 0x80 + LcdType[ (uint8_t)( Y - 1) ] + ( X - 1 
      +                          ) ) , 0 );
  2316  000CBC  0E00               	movlw	0
  2317  000CBE  6E05               	movwf	i2sendByte@mode,c
  2318  000CC0  C00A  F00B         	movff	i2gotoXY@Y,??i2_gotoXY
  2319  000CC4  0EFF               	movlw	255
  2320  000CC6  260B               	addwf	??i2_gotoXY,f,c
  2321  000CC8  500B               	movf	??i2_gotoXY,w,c
  2322  000CCA  0D01               	mullw	1
  2323  000CCC  0E0C               	movlw	low i2gotoXY@LcdType
  2324  000CCE  24F3               	addwf	prodl,w,c
  2325  000CD0  6ED9               	movwf	fsr2l,c
  2326  000CD2  0E00               	movlw	high i2gotoXY@LcdType
  2327  000CD4  20F4               	addwfc	prodh,w,c
  2328  000CD6  6EDA               	movwf	fsr2h,c
  2329  000CD8  50DF               	movf	indf2,w,c
  2330  000CDA  2410               	addwf	i2gotoXY@X,w,c
  2331  000CDC  0F7F               	addlw	127
  2332  000CDE  ECFE  F003         	call	i2_sendByte
  2333  000CE2                     i2l94:
  2334  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  2335  000CE4  0012               	return		;funcret
  2336  000CE6  FFFF               	dw	65535	; errata NOP
  2337  000CE8                     __end_ofi2_gotoXY:
  2338                           	opt stack 0
  2339                           pclatu	equ	0xFFB
  2340                           pclath	equ	0xFFA
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           prodh	equ	0xFF4
  2346                           prodl	equ	0xFF3
  2347                           intcon	equ	0xFF2
  2348                           postinc0	equ	0xFEE
  2349                           fsr0h	equ	0xFEA
  2350                           fsr0l	equ	0xFE9
  2351                           wreg	equ	0xFE8
  2352                           postdec1	equ	0xFE5
  2353                           plusw1	equ	0xFE3
  2354                           fsr1h	equ	0xFE2
  2355                           fsr1l	equ	0xFE1
  2356                           indf2	equ	0xFDF
  2357                           plusw2	equ	0xFDB
  2358                           fsr2h	equ	0xFDA
  2359                           fsr2l	equ	0xFD9
  2360                           status	equ	0xFD8
  2361                           
  2362 ;; *************** function i2_sendByte *****************
  2363 ;; Defined at:
  2364 ;;		line 139 in file "i2c_lcd_pic.h"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  byte            1    wreg     unsigned char 
  2367 ;;  mode            1    4[COMRAM] unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  byte            1    7[COMRAM] unsigned char 
  2370 ;;  sendByte        1    8[COMRAM] unsigned char 
  2371 ;;  sendByte        1    6[COMRAM] unsigned char 
  2372 ;;  sendByte        1    5[COMRAM] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2382 ;;      Params:         1       0       0       0       0       0       0
  2383 ;;      Locals:         4       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0
  2385 ;;      Totals:         5       0       0       0       0       0       0
  2386 ;;Total ram usage:        5 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		i2_delay_loop
  2391 ;;		i2_expanderWrite
  2392 ;;		i2_pulseWrite
  2393 ;; This function is called by:
  2394 ;;		_i2c_lcd_Print_Int
  2395 ;;		i2_gotoXY
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text16
  2400  0007FC                     __ptext16:
  2401                           	opt stack 0
  2402  0007FC                     i2_sendByte:
  2403                           	opt stack 0
  2404  0007FC  FFFF               	dw	65535	; assembler added errata NOP
  2405                           
  2406                           ;incstack = 0
  2407                           ;i2sendByte@byte stored from wreg
  2408  0007FE  6E08               	movwf	i2sendByte@byte,c
  2409                           
  2410                           ;i2c_lcd_pic.h: 141: uint8_t mask_lower_nibble , swap_mask_Lower_nibble , _data;
  2411                           ;i2c_lcd_pic.h: 143: mask_lower_nibble = byte;
  2412  000800  C008  F007         	movff	i2sendByte@byte,i2sendByte@mask_lower_nibble
  2413                           
  2414                           ;i2c_lcd_pic.h: 146: swap_mask_Lower_nibble = (uint8_t)( ( byte << 4 ) & 0xF0 );
  2415  000804  3808               	swapf	i2sendByte@byte,w,c
  2416  000806  0BF0               	andlw	240
  2417  000808  0BF0               	andlw	240
  2418  00080A  6E06               	movwf	i2sendByte@swap_mask_Lower_nibble,c
  2419                           
  2420                           ;i2c_lcd_pic.h: 148: mask_lower_nibble &= 0xF0;
  2421  00080C  0EF0               	movlw	240
  2422  00080E  1607               	andwf	i2sendByte@mask_lower_nibble,f,c
  2423                           
  2424                           ;i2c_lcd_pic.h: 150: _data = 0b00000101;
  2425  000810  0E05               	movlw	5
  2426  000812  6E09               	movwf	i2sendByte@_data,c
  2427                           
  2428                           ;i2c_lcd_pic.h: 151: _data |= mask_lower_nibble;
  2429  000814  5007               	movf	i2sendByte@mask_lower_nibble,w,c
  2430  000816  1209               	iorwf	i2sendByte@_data,f,c
  2431                           
  2432                           ;i2c_lcd_pic.h: 152: expanderWrite( _data );
  2433  000818  5009               	movf	i2sendByte@_data,w,c
  2434  00081A  EC32  F007         	call	i2_expanderWrite
  2435                           
  2436                           ;i2c_lcd_pic.h: 154: if( mode == 0 ){
  2437  00081E  5005               	movf	i2sendByte@mode,w,c
  2438  000820  A4D8               	btfss	status,2,c
  2439  000822  D004               	goto	i2l1263
  2440                           
  2441                           ;i2c_lcd_pic.h: 155: _data &= ~( 0b00000001 ) ;
  2442  000824  9009               	bcf	i2sendByte@_data,0,c
  2443                           
  2444                           ;i2c_lcd_pic.h: 156: expanderWrite( _data );
  2445  000826  5009               	movf	i2sendByte@_data,w,c
  2446  000828  EC32  F007         	call	i2_expanderWrite
  2447  00082C                     i2l1263:
  2448  00082C  FFFF               	dw	65535	; assembler added errata NOP
  2449                           
  2450                           ;i2c_lcd_pic.h: 157: }
  2451                           ;i2c_lcd_pic.h: 158: if( mode == 1 ){
  2452  00082E  0405               	decf	i2sendByte@mode,w,c
  2453  000830  A4D8               	btfss	status,2,c
  2454  000832  D004               	goto	i2l1269
  2455                           
  2456                           ;i2c_lcd_pic.h: 159: _data |= ( 0b00000001 ) ;
  2457  000834  8009               	bsf	i2sendByte@_data,0,c
  2458                           
  2459                           ;i2c_lcd_pic.h: 160: expanderWrite( _data );
  2460  000836  5009               	movf	i2sendByte@_data,w,c
  2461  000838  EC32  F007         	call	i2_expanderWrite
  2462  00083C                     i2l1269:
  2463  00083C  FFFF               	dw	65535	; assembler added errata NOP
  2464                           
  2465                           ;i2c_lcd_pic.h: 161: }
  2466                           ;i2c_lcd_pic.h: 162: pulseWrite( _data );
  2467  00083E  5009               	movf	i2sendByte@_data,w,c
  2468  000840  ECE0  F006         	call	i2_pulseWrite
  2469                           
  2470                           ;i2c_lcd_pic.h: 164: delay_loop( 0x0100 );
  2471  000844  0E01               	movlw	1
  2472  000846  6E02               	movwf	i2delay_loop@nCount+1,c
  2473  000848  0E00               	movlw	0
  2474  00084A  6E01               	movwf	i2delay_loop@nCount,c
  2475  00084C  EC03  F007         	call	i2_delay_loop	;wreg free
  2476                           
  2477                           ;i2c_lcd_pic.h: 167: _data = 0b00000101;
  2478  000850  0E05               	movlw	5
  2479  000852  6E09               	movwf	i2sendByte@_data,c
  2480                           
  2481                           ;i2c_lcd_pic.h: 168: _data |= swap_mask_Lower_nibble;
  2482  000854  5006               	movf	i2sendByte@swap_mask_Lower_nibble,w,c
  2483  000856  1209               	iorwf	i2sendByte@_data,f,c
  2484                           
  2485                           ;i2c_lcd_pic.h: 169: expanderWrite( _data );
  2486  000858  5009               	movf	i2sendByte@_data,w,c
  2487  00085A  EC32  F007         	call	i2_expanderWrite
  2488                           
  2489                           ;i2c_lcd_pic.h: 171: if( mode == 0 ){
  2490  00085E  5005               	movf	i2sendByte@mode,w,c
  2491  000860  A4D8               	btfss	status,2,c
  2492  000862  D004               	goto	i2l1285
  2493                           
  2494                           ;i2c_lcd_pic.h: 172: _data &= ~( 0b00000001 ) ;
  2495  000864  9009               	bcf	i2sendByte@_data,0,c
  2496                           
  2497                           ;i2c_lcd_pic.h: 173: expanderWrite( _data );
  2498  000866  5009               	movf	i2sendByte@_data,w,c
  2499  000868  EC32  F007         	call	i2_expanderWrite
  2500  00086C                     i2l1285:
  2501  00086C  FFFF               	dw	65535	; assembler added errata NOP
  2502                           
  2503                           ;i2c_lcd_pic.h: 174: }
  2504                           ;i2c_lcd_pic.h: 175: if( mode == 1 ){
  2505  00086E  0405               	decf	i2sendByte@mode,w,c
  2506  000870  A4D8               	btfss	status,2,c
  2507  000872  D004               	goto	i2l1291
  2508                           
  2509                           ;i2c_lcd_pic.h: 176: _data |= ( 0b00000001 ) ;
  2510  000874  8009               	bsf	i2sendByte@_data,0,c
  2511                           
  2512                           ;i2c_lcd_pic.h: 177: expanderWrite( _data );
  2513  000876  5009               	movf	i2sendByte@_data,w,c
  2514  000878  EC32  F007         	call	i2_expanderWrite
  2515  00087C                     i2l1291:
  2516  00087C  FFFF               	dw	65535	; assembler added errata NOP
  2517                           
  2518                           ;i2c_lcd_pic.h: 178: }
  2519                           ;i2c_lcd_pic.h: 179: pulseWrite( _data );
  2520  00087E  5009               	movf	i2sendByte@_data,w,c
  2521  000880  ECE0  F006         	call	i2_pulseWrite
  2522                           
  2523                           ;i2c_lcd_pic.h: 181: delay_loop( 0x0100 );
  2524  000884  0E01               	movlw	1
  2525  000886  6E02               	movwf	i2delay_loop@nCount+1,c
  2526  000888  0E00               	movlw	0
  2527  00088A  6E01               	movwf	i2delay_loop@nCount,c
  2528  00088C  EC03  F007         	call	i2_delay_loop	;wreg free
  2529  000890  0012               	return		;funcret
  2530  000892  FFFF               	dw	65535	; errata NOP
  2531  000894                     __end_ofi2_sendByte:
  2532                           	opt stack 0
  2533                           pclatu	equ	0xFFB
  2534                           pclath	equ	0xFFA
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           intcon	equ	0xFF2
  2542                           postinc0	equ	0xFEE
  2543                           fsr0h	equ	0xFEA
  2544                           fsr0l	equ	0xFE9
  2545                           wreg	equ	0xFE8
  2546                           postdec1	equ	0xFE5
  2547                           plusw1	equ	0xFE3
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           plusw2	equ	0xFDB
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function i2_pulseWrite *****************
  2557 ;; Defined at:
  2558 ;;		line 127 in file "i2c_lcd_pic.h"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  portPulse       1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  portPulse       1    3[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2572 ;;      Params:         0       0       0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0
  2575 ;;      Totals:         1       0       0       0       0       0       0
  2576 ;;Total ram usage:        1 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    2
  2579 ;; This function calls:
  2580 ;;		i2_delay_loop
  2581 ;;		i2_expanderWrite
  2582 ;; This function is called by:
  2583 ;;		i2_sendByte
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text17
  2588  000DC0                     __ptext17:
  2589                           	opt stack 0
  2590  000DC0                     i2_pulseWrite:
  2591                           	opt stack 0
  2592  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  2593                           
  2594                           ;incstack = 0
  2595                           ;i2pulseWrite@portPulse stored from wreg
  2596  000DC2  6E04               	movwf	i2pulseWrite@portPulse,c
  2597                           
  2598                           ;i2c_lcd_pic.h: 129: portPulse |= 0b00000100 ;
  2599  000DC4  8404               	bsf	i2pulseWrite@portPulse,2,c
  2600                           
  2601                           ;i2c_lcd_pic.h: 130: expanderWrite( portPulse );
  2602  000DC6  5004               	movf	i2pulseWrite@portPulse,w,c
  2603  000DC8  EC32  F007         	call	i2_expanderWrite
  2604                           
  2605                           ;i2c_lcd_pic.h: 132: delay_loop( 0x0010 );
  2606  000DCC  0E00               	movlw	0
  2607  000DCE  6E02               	movwf	i2delay_loop@nCount+1,c
  2608  000DD0  0E10               	movlw	16
  2609  000DD2  6E01               	movwf	i2delay_loop@nCount,c
  2610  000DD4  EC03  F007         	call	i2_delay_loop	;wreg free
  2611                           
  2612                           ;i2c_lcd_pic.h: 134: portPulse &= ~0b00000100;
  2613  000DD8  9404               	bcf	i2pulseWrite@portPulse,2,c
  2614                           
  2615                           ;i2c_lcd_pic.h: 135: expanderWrite( portPulse );
  2616  000DDA  5004               	movf	i2pulseWrite@portPulse,w,c
  2617  000DDC  EC32  F007         	call	i2_expanderWrite
  2618  000DE0  0012               	return		;funcret
  2619  000DE2  FFFF               	dw	65535	; errata NOP
  2620  000DE4                     __end_ofi2_pulseWrite:
  2621                           	opt stack 0
  2622                           pclatu	equ	0xFFB
  2623                           pclath	equ	0xFFA
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           intcon	equ	0xFF2
  2631                           postinc0	equ	0xFEE
  2632                           fsr0h	equ	0xFEA
  2633                           fsr0l	equ	0xFE9
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           plusw1	equ	0xFE3
  2637                           fsr1h	equ	0xFE2
  2638                           fsr1l	equ	0xFE1
  2639                           indf2	equ	0xFDF
  2640                           plusw2	equ	0xFDB
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function i2_expanderWrite *****************
  2646 ;; Defined at:
  2647 ;;		line 103 in file "i2c_lcd_pic.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  cmdData         1    wreg     unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  cmdData         1    2[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2661 ;;      Params:         0       0       0       0       0       0       0
  2662 ;;      Locals:         1       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0
  2664 ;;      Totals:         1       0       0       0       0       0       0
  2665 ;;Total ram usage:        1 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		i2_i2c_lcd_Write
  2670 ;; This function is called by:
  2671 ;;		i2_pulseWrite
  2672 ;;		i2_sendByte
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text18
  2677  000E64                     __ptext18:
  2678                           	opt stack 0
  2679  000E64                     i2_expanderWrite:
  2680                           	opt stack 0
  2681  000E64  FFFF               	dw	65535	; assembler added errata NOP
  2682                           
  2683                           ;incstack = 0
  2684                           ;i2expanderWrite@cmdData stored from wreg
  2685  000E66  6E03               	movwf	i2expanderWrite@cmdData,c
  2686                           
  2687                           ;i2c_lcd_pic.h: 104: i2c_lcd_Write( (uint8_t )( cmdData | 0x08 ) );
  2688  000E68  5003               	movf	i2expanderWrite@cmdData,w,c
  2689  000E6A  0908               	iorlw	8
  2690  000E6C  ECCA  F005         	call	i2_i2c_lcd_Write
  2691  000E70  0012               	return		;funcret
  2692  000E72  FFFF               	dw	65535	; errata NOP
  2693  000E74                     __end_ofi2_expanderWrite:
  2694                           	opt stack 0
  2695                           pclatu	equ	0xFFB
  2696                           pclath	equ	0xFFA
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           postinc0	equ	0xFEE
  2705                           fsr0h	equ	0xFEA
  2706                           fsr0l	equ	0xFE9
  2707                           wreg	equ	0xFE8
  2708                           postdec1	equ	0xFE5
  2709                           plusw1	equ	0xFE3
  2710                           fsr1h	equ	0xFE2
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           plusw2	equ	0xFDB
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function i2_i2c_lcd_Write *****************
  2719 ;; Defined at:
  2720 ;;		line 94 in file "i2c_lcd_pic.h"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  cmd             1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  cmd             1    1[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2734 ;;      Params:         0       0       0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0
  2736 ;;      Temps:          1       0       0       0       0       0       0
  2737 ;;      Totals:         2       0       0       0       0       0       0
  2738 ;;Total ram usage:        2 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		i2_expanderWrite
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text19
  2748  000B94                     __ptext19:
  2749                           	opt stack 0
  2750  000B94                     i2_i2c_lcd_Write:
  2751                           	opt stack 0
  2752  000B94  FFFF               	dw	65535	; assembler added errata NOP
  2753                           
  2754                           ;incstack = 0
  2755                           ;i2i2c_lcd_Write@cmd stored from wreg
  2756  000B96  6E02               	movwf	i2i2c_lcd_Write@cmd,c
  2757  000B98                     i2l48:
  2758  000B98  FFFF               	dw	65535	; assembler added errata NOP
  2759  000B9A  B4C7               	btfsc	4039,2,c	;volatile
  2760  000B9C  D7FD               	goto	i2l48
  2761  000B9E  CFC5 F001          	movff	4037,??i2_i2c_lcd_Write	;volatile
  2762  000BA2  0E1F               	movlw	31
  2763  000BA4  1601               	andwf	??i2_i2c_lcd_Write,f,c
  2764  000BA6  A4D8               	btfss	status,2,c
  2765  000BA8  D7F7               	goto	i2l48
  2766  000BAA  80C5               	bsf	4037,0,c	;volatile
  2767  000BAC                     i2l51:
  2768  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  2769  000BAE  B4C7               	btfsc	4039,2,c	;volatile
  2770  000BB0  D7FD               	goto	i2l51
  2771  000BB2  CFC5 F001          	movff	4037,??i2_i2c_lcd_Write	;volatile
  2772  000BB6  0E1F               	movlw	31
  2773  000BB8  1601               	andwf	??i2_i2c_lcd_Write,f,c
  2774  000BBA  A4D8               	btfss	status,2,c
  2775  000BBC  D7F7               	goto	i2l51
  2776  000BBE  0E4E               	movlw	78
  2777  000BC0  6EC9               	movwf	4041,c	;volatile
  2778  000BC2                     i2l54:
  2779  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  2780  000BC4  B4C7               	btfsc	4039,2,c	;volatile
  2781  000BC6  D7FD               	goto	i2l54
  2782  000BC8  CFC5 F001          	movff	4037,??i2_i2c_lcd_Write	;volatile
  2783  000BCC  0E1F               	movlw	31
  2784  000BCE  1601               	andwf	??i2_i2c_lcd_Write,f,c
  2785  000BD0  A4D8               	btfss	status,2,c
  2786  000BD2  D7F7               	goto	i2l54
  2787  000BD4  C002  FFC9         	movff	i2i2c_lcd_Write@cmd,4041	;volatile
  2788  000BD8                     i2l57:
  2789  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  2790  000BDA  B4C7               	btfsc	4039,2,c	;volatile
  2791  000BDC  D7FD               	goto	i2l57
  2792  000BDE  CFC5 F001          	movff	4037,??i2_i2c_lcd_Write	;volatile
  2793  000BE2  0E1F               	movlw	31
  2794  000BE4  1601               	andwf	??i2_i2c_lcd_Write,f,c
  2795  000BE6  A4D8               	btfss	status,2,c
  2796  000BE8  D7F7               	goto	i2l57
  2797  000BEA  84C5               	bsf	4037,2,c	;volatile
  2798  000BEC  0012               	return		;funcret
  2799  000BEE  FFFF               	dw	65535	; errata NOP
  2800  000BF0                     __end_ofi2_i2c_lcd_Write:
  2801                           	opt stack 0
  2802                           pclatu	equ	0xFFB
  2803                           pclath	equ	0xFFA
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodh	equ	0xFF4
  2809                           prodl	equ	0xFF3
  2810                           intcon	equ	0xFF2
  2811                           postinc0	equ	0xFEE
  2812                           fsr0h	equ	0xFEA
  2813                           fsr0l	equ	0xFE9
  2814                           wreg	equ	0xFE8
  2815                           postdec1	equ	0xFE5
  2816                           plusw1	equ	0xFE3
  2817                           fsr1h	equ	0xFE2
  2818                           fsr1l	equ	0xFE1
  2819                           indf2	equ	0xFDF
  2820                           plusw2	equ	0xFDB
  2821                           fsr2h	equ	0xFDA
  2822                           fsr2l	equ	0xFD9
  2823                           status	equ	0xFD8
  2824                           
  2825 ;; *************** function i2_delay_loop *****************
  2826 ;; Defined at:
  2827 ;;		line 121 in file "i2c_lcd_pic.h"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  nCount          2    0[COMRAM] unsigned short 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2841 ;;      Params:         2       0       0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0
  2844 ;;      Totals:         2       0       0       0       0       0       0
  2845 ;;Total ram usage:        2 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		i2_pulseWrite
  2851 ;;		i2_sendByte
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text20
  2856  000E06                     __ptext20:
  2857                           	opt stack 0
  2858  000E06                     i2_delay_loop:
  2859                           	opt stack 0
  2860  000E06  FFFF               	dw	65535	; assembler added errata NOP
  2861                           
  2862                           ;i2c_lcd_pic.h: 122: while (nCount != 0){
  2863                           
  2864                           ;incstack = 0
  2865  000E08  D004               	goto	i2l1213
  2866  000E0A                     i2l1211:
  2867  000E0A  FFFF               	dw	65535	; assembler added errata NOP
  2868                           
  2869                           ;i2c_lcd_pic.h: 123: nCount--;
  2870  000E0C  0601               	decf	i2delay_loop@nCount,f,c
  2871  000E0E  A0D8               	btfss	status,0,c
  2872  000E10  0602               	decf	i2delay_loop@nCount+1,f,c
  2873  000E12                     i2l1213:
  2874  000E12  FFFF               	dw	65535	; assembler added errata NOP
  2875  000E14  5001               	movf	i2delay_loop@nCount,w,c
  2876  000E16  1002               	iorwf	i2delay_loop@nCount+1,w,c
  2877  000E18  B4D8               	btfsc	status,2,c
  2878  000E1A  0012               	return		;funcret
  2879  000E1C  FFFF               	dw	65535	; assembler added errata NOP
  2880  000E1E  D7F5               	goto	i2l1211
  2881  000E20  FFFF               	dw	65535	; errata NOP
  2882  000E22                     __end_ofi2_delay_loop:
  2883                           	opt stack 0
  2884                           pclatu	equ	0xFFB
  2885                           pclath	equ	0xFFA
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           prodh	equ	0xFF4
  2891                           prodl	equ	0xFF3
  2892                           intcon	equ	0xFF2
  2893                           postinc0	equ	0xFEE
  2894                           fsr0h	equ	0xFEA
  2895                           fsr0l	equ	0xFE9
  2896                           wreg	equ	0xFE8
  2897                           postdec1	equ	0xFE5
  2898                           plusw1	equ	0xFE3
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           plusw2	equ	0xFDB
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function ___wmul *****************
  2908 ;; Defined at:
  2909 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  multiplier      2    0[COMRAM] unsigned int 
  2912 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  product         2    4[COMRAM] unsigned int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2    0[COMRAM] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, prodl, prodh
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2924 ;;      Params:         4       0       0       0       0       0       0
  2925 ;;      Locals:         2       0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0
  2927 ;;      Totals:         6       0       0       0       0       0       0
  2928 ;;Total ram usage:        6 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_i2c_lcd_Print_Int
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text21
  2938  000D96                     __ptext21:
  2939                           	opt stack 0
  2940  000D96                     ___wmul:
  2941                           	opt stack 0
  2942  000D96  FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ;incstack = 0
  2945  000D98  5001               	movf	___wmul@multiplier,w,c
  2946  000D9A  0203               	mulwf	___wmul@multiplicand,c
  2947  000D9C  CFF3 F005          	movff	prodl,___wmul@product
  2948  000DA0  CFF4 F006          	movff	prodh,___wmul@product+1
  2949  000DA4  5001               	movf	___wmul@multiplier,w,c
  2950  000DA6  0204               	mulwf	___wmul@multiplicand+1,c
  2951  000DA8  50F3               	movf	prodl,w,c
  2952  000DAA  2606               	addwf	___wmul@product+1,f,c
  2953  000DAC  5002               	movf	___wmul@multiplier+1,w,c
  2954  000DAE  0203               	mulwf	___wmul@multiplicand,c
  2955  000DB0  50F3               	movf	prodl,w,c
  2956  000DB2  2606               	addwf	___wmul@product+1,f,c
  2957  000DB4  C005  F001         	movff	___wmul@product,?___wmul
  2958  000DB8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2959  000DBC  0012               	return		;funcret
  2960  000DBE  FFFF               	dw	65535	; errata NOP
  2961  000DC0                     __end_of___wmul:
  2962                           	opt stack 0
  2963                           pclatu	equ	0xFFB
  2964                           pclath	equ	0xFFA
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon	equ	0xFF2
  2972                           postinc0	equ	0xFEE
  2973                           fsr0h	equ	0xFEA
  2974                           fsr0l	equ	0xFE9
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           plusw1	equ	0xFE3
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           plusw2	equ	0xFDB
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function ___awmod *****************
  2987 ;; Defined at:
  2988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  dividend        2    0[COMRAM] int 
  2991 ;;  divisor         2    2[COMRAM] int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  sign            1    5[COMRAM] unsigned char 
  2994 ;;  counter         1    4[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    0[COMRAM] int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3004 ;;      Params:         4       0       0       0       0       0       0
  3005 ;;      Locals:         2       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0
  3007 ;;      Totals:         6       0       0       0       0       0       0
  3008 ;;Total ram usage:        6 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_i2c_lcd_Print_Int
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text22
  3018  0009C2                     __ptext22:
  3019                           	opt stack 0
  3020  0009C2                     ___awmod:
  3021                           	opt stack 0
  3022  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  3023                           
  3024                           ;incstack = 0
  3025  0009C4  0E00               	movlw	0
  3026  0009C6  6E06               	movwf	___awmod@sign,c
  3027  0009C8  AE02               	btfss	___awmod@dividend+1,7,c
  3028  0009CA  D006               	goto	i2l1363
  3029  0009CC  6C01               	negf	___awmod@dividend,c
  3030  0009CE  1E02               	comf	___awmod@dividend+1,f,c
  3031  0009D0  B0D8               	btfsc	status,0,c
  3032  0009D2  2A02               	incf	___awmod@dividend+1,f,c
  3033  0009D4  0E01               	movlw	1
  3034  0009D6  6E06               	movwf	___awmod@sign,c
  3035  0009D8                     i2l1363:
  3036  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  3037  0009DA  AE04               	btfss	___awmod@divisor+1,7,c
  3038  0009DC  D004               	goto	i2l1367
  3039  0009DE  6C03               	negf	___awmod@divisor,c
  3040  0009E0  1E04               	comf	___awmod@divisor+1,f,c
  3041  0009E2  B0D8               	btfsc	status,0,c
  3042  0009E4  2A04               	incf	___awmod@divisor+1,f,c
  3043  0009E6                     i2l1367:
  3044  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  3045  0009E8  5003               	movf	___awmod@divisor,w,c
  3046  0009EA  1004               	iorwf	___awmod@divisor+1,w,c
  3047  0009EC  B4D8               	btfsc	status,2,c
  3048  0009EE  D01C               	goto	i2l1383
  3049  0009F0  0E01               	movlw	1
  3050  0009F2  6E05               	movwf	___awmod@counter,c
  3051  0009F4  D005               	goto	i2l1373
  3052  0009F6                     i2l1371:
  3053  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  3054  0009F8  90D8               	bcf	status,0,c
  3055  0009FA  3603               	rlcf	___awmod@divisor,f,c
  3056  0009FC  3604               	rlcf	___awmod@divisor+1,f,c
  3057  0009FE  2A05               	incf	___awmod@counter,f,c
  3058  000A00                     i2l1373:
  3059  000A00  FFFF               	dw	65535	; assembler added errata NOP
  3060  000A02  AE04               	btfss	___awmod@divisor+1,7,c
  3061  000A04  D7F8               	goto	i2l1371
  3062  000A06                     i2l1375:
  3063  000A06  FFFF               	dw	65535	; assembler added errata NOP
  3064  000A08  5003               	movf	___awmod@divisor,w,c
  3065  000A0A  5C01               	subwf	___awmod@dividend,w,c
  3066  000A0C  5004               	movf	___awmod@divisor+1,w,c
  3067  000A0E  5802               	subwfb	___awmod@dividend+1,w,c
  3068  000A10  A0D8               	btfss	status,0,c
  3069  000A12  D004               	goto	i2l1379
  3070  000A14  5003               	movf	___awmod@divisor,w,c
  3071  000A16  5E01               	subwf	___awmod@dividend,f,c
  3072  000A18  5004               	movf	___awmod@divisor+1,w,c
  3073  000A1A  5A02               	subwfb	___awmod@dividend+1,f,c
  3074  000A1C                     i2l1379:
  3075  000A1C  FFFF               	dw	65535	; assembler added errata NOP
  3076  000A1E  90D8               	bcf	status,0,c
  3077  000A20  3204               	rrcf	___awmod@divisor+1,f,c
  3078  000A22  3203               	rrcf	___awmod@divisor,f,c
  3079  000A24  2E05               	decfsz	___awmod@counter,f,c
  3080  000A26  D7EF               	goto	i2l1375
  3081  000A28                     i2l1383:
  3082  000A28  FFFF               	dw	65535	; assembler added errata NOP
  3083  000A2A  5006               	movf	___awmod@sign,w,c
  3084  000A2C  B4D8               	btfsc	status,2,c
  3085  000A2E  D004               	goto	i2l1387
  3086  000A30  6C01               	negf	___awmod@dividend,c
  3087  000A32  1E02               	comf	___awmod@dividend+1,f,c
  3088  000A34  B0D8               	btfsc	status,0,c
  3089  000A36  2A02               	incf	___awmod@dividend+1,f,c
  3090  000A38                     i2l1387:
  3091  000A38  FFFF               	dw	65535	; assembler added errata NOP
  3092  000A3A  C001  F001         	movff	___awmod@dividend,?___awmod
  3093  000A3E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3094  000A42  0012               	return		;funcret
  3095  000A44  FFFF               	dw	65535	; errata NOP
  3096  000A46                     __end_of___awmod:
  3097                           	opt stack 0
  3098                           pclatu	equ	0xFFB
  3099                           pclath	equ	0xFFA
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           intcon	equ	0xFF2
  3107                           postinc0	equ	0xFEE
  3108                           fsr0h	equ	0xFEA
  3109                           fsr0l	equ	0xFE9
  3110                           wreg	equ	0xFE8
  3111                           postdec1	equ	0xFE5
  3112                           plusw1	equ	0xFE3
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           plusw2	equ	0xFDB
  3117                           fsr2h	equ	0xFDA
  3118                           fsr2l	equ	0xFD9
  3119                           status	equ	0xFD8
  3120                           
  3121 ;; *************** function ___awdiv *****************
  3122 ;; Defined at:
  3123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  dividend        2    0[COMRAM] int 
  3126 ;;  divisor         2    2[COMRAM] int 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  quotient        2    6[COMRAM] int 
  3129 ;;  sign            1    5[COMRAM] unsigned char 
  3130 ;;  counter         1    4[COMRAM] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2    0[COMRAM] int 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         4       0       0       0       0       0       0
  3141 ;;      Locals:         4       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         8       0       0       0       0       0       0
  3144 ;;Total ram usage:        8 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_i2c_lcd_Print_Int
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text23
  3154  000894                     __ptext23:
  3155                           	opt stack 0
  3156  000894                     ___awdiv:
  3157                           	opt stack 0
  3158  000894  FFFF               	dw	65535	; assembler added errata NOP
  3159                           
  3160                           ;incstack = 0
  3161  000896  0E00               	movlw	0
  3162  000898  6E06               	movwf	___awdiv@sign,c
  3163  00089A  AE04               	btfss	___awdiv@divisor+1,7,c
  3164  00089C  D006               	goto	i2l1319
  3165  00089E  6C03               	negf	___awdiv@divisor,c
  3166  0008A0  1E04               	comf	___awdiv@divisor+1,f,c
  3167  0008A2  B0D8               	btfsc	status,0,c
  3168  0008A4  2A04               	incf	___awdiv@divisor+1,f,c
  3169  0008A6  0E01               	movlw	1
  3170  0008A8  6E06               	movwf	___awdiv@sign,c
  3171  0008AA                     i2l1319:
  3172  0008AA  FFFF               	dw	65535	; assembler added errata NOP
  3173  0008AC  AE02               	btfss	___awdiv@dividend+1,7,c
  3174  0008AE  D006               	goto	i2l1325
  3175  0008B0  6C01               	negf	___awdiv@dividend,c
  3176  0008B2  1E02               	comf	___awdiv@dividend+1,f,c
  3177  0008B4  B0D8               	btfsc	status,0,c
  3178  0008B6  2A02               	incf	___awdiv@dividend+1,f,c
  3179  0008B8  0E01               	movlw	1
  3180  0008BA  1A06               	xorwf	___awdiv@sign,f,c
  3181  0008BC                     i2l1325:
  3182  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  3183  0008BE  0E00               	movlw	0
  3184  0008C0  6E08               	movwf	___awdiv@quotient+1,c
  3185  0008C2  0E00               	movlw	0
  3186  0008C4  6E07               	movwf	___awdiv@quotient,c
  3187  0008C6  5003               	movf	___awdiv@divisor,w,c
  3188  0008C8  1004               	iorwf	___awdiv@divisor+1,w,c
  3189  0008CA  B4D8               	btfsc	status,2,c
  3190  0008CC  D020               	goto	i2l1347
  3191  0008CE  0E01               	movlw	1
  3192  0008D0  6E05               	movwf	___awdiv@counter,c
  3193  0008D2  D005               	goto	i2l1333
  3194  0008D4                     i2l1331:
  3195  0008D4  FFFF               	dw	65535	; assembler added errata NOP
  3196  0008D6  90D8               	bcf	status,0,c
  3197  0008D8  3603               	rlcf	___awdiv@divisor,f,c
  3198  0008DA  3604               	rlcf	___awdiv@divisor+1,f,c
  3199  0008DC  2A05               	incf	___awdiv@counter,f,c
  3200  0008DE                     i2l1333:
  3201  0008DE  FFFF               	dw	65535	; assembler added errata NOP
  3202  0008E0  AE04               	btfss	___awdiv@divisor+1,7,c
  3203  0008E2  D7F8               	goto	i2l1331
  3204  0008E4                     i2l1335:
  3205  0008E4  FFFF               	dw	65535	; assembler added errata NOP
  3206  0008E6  90D8               	bcf	status,0,c
  3207  0008E8  3607               	rlcf	___awdiv@quotient,f,c
  3208  0008EA  3608               	rlcf	___awdiv@quotient+1,f,c
  3209  0008EC  5003               	movf	___awdiv@divisor,w,c
  3210  0008EE  5C01               	subwf	___awdiv@dividend,w,c
  3211  0008F0  5004               	movf	___awdiv@divisor+1,w,c
  3212  0008F2  5802               	subwfb	___awdiv@dividend+1,w,c
  3213  0008F4  A0D8               	btfss	status,0,c
  3214  0008F6  D005               	goto	i2l1343
  3215  0008F8  5003               	movf	___awdiv@divisor,w,c
  3216  0008FA  5E01               	subwf	___awdiv@dividend,f,c
  3217  0008FC  5004               	movf	___awdiv@divisor+1,w,c
  3218  0008FE  5A02               	subwfb	___awdiv@dividend+1,f,c
  3219  000900  8007               	bsf	___awdiv@quotient,0,c
  3220  000902                     i2l1343:
  3221  000902  FFFF               	dw	65535	; assembler added errata NOP
  3222  000904  90D8               	bcf	status,0,c
  3223  000906  3204               	rrcf	___awdiv@divisor+1,f,c
  3224  000908  3203               	rrcf	___awdiv@divisor,f,c
  3225  00090A  2E05               	decfsz	___awdiv@counter,f,c
  3226  00090C  D7EB               	goto	i2l1335
  3227  00090E                     i2l1347:
  3228  00090E  FFFF               	dw	65535	; assembler added errata NOP
  3229  000910  5006               	movf	___awdiv@sign,w,c
  3230  000912  B4D8               	btfsc	status,2,c
  3231  000914  D004               	goto	i2l1351
  3232  000916  6C07               	negf	___awdiv@quotient,c
  3233  000918  1E08               	comf	___awdiv@quotient+1,f,c
  3234  00091A  B0D8               	btfsc	status,0,c
  3235  00091C  2A08               	incf	___awdiv@quotient+1,f,c
  3236  00091E                     i2l1351:
  3237  00091E  FFFF               	dw	65535	; assembler added errata NOP
  3238  000920  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3239  000924  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3240  000928  0012               	return		;funcret
  3241  00092A  FFFF               	dw	65535	; errata NOP
  3242  00092C                     __end_of___awdiv:
  3243                           	opt stack 0
  3244                           pclatu	equ	0xFFB
  3245                           pclath	equ	0xFFA
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           intcon	equ	0xFF2
  3253                           postinc0	equ	0xFEE
  3254                           fsr0h	equ	0xFEA
  3255                           fsr0l	equ	0xFE9
  3256                           wreg	equ	0xFE8
  3257                           postdec1	equ	0xFE5
  3258                           plusw1	equ	0xFE3
  3259                           fsr1h	equ	0xFE2
  3260                           fsr1l	equ	0xFE1
  3261                           indf2	equ	0xFDF
  3262                           plusw2	equ	0xFDB
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           postinc0	equ	0xFEE
  3276                           fsr0h	equ	0xFEA
  3277                           fsr0l	equ	0xFE9
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           plusw1	equ	0xFE3
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           plusw2	equ	0xFDB
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289                           	psect	rparam
  3290  0000                     pclatu	equ	0xFFB
  3291                           pclath	equ	0xFFA
  3292                           tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           prodh	equ	0xFF4
  3297                           prodl	equ	0xFF3
  3298                           intcon	equ	0xFF2
  3299                           postinc0	equ	0xFEE
  3300                           fsr0h	equ	0xFEA
  3301                           fsr0l	equ	0xFE9
  3302                           wreg	equ	0xFE8
  3303                           postdec1	equ	0xFE5
  3304                           plusw1	equ	0xFE3
  3305                           fsr1h	equ	0xFE2
  3306                           fsr1l	equ	0xFE1
  3307                           indf2	equ	0xFDF
  3308                           plusw2	equ	0xFDB
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           
  3313                           	psect	temp
  3314  00003A                     btemp:
  3315                           	opt stack 0
  3316  00003A                     	ds	1
  3317  0000                     int$flags	set	btemp
  3318                           pclatu	equ	0xFFB
  3319                           pclath	equ	0xFFA
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           postdec1	equ	0xFE5
  3332                           plusw1	equ	0xFE3
  3333                           fsr1h	equ	0xFE2
  3334                           fsr1l	equ	0xFE1
  3335                           indf2	equ	0xFDF
  3336                           plusw2	equ	0xFDB
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        4
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      57
    BANK0           160     18      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2c_lcd_Print@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ADC_ISR
    _ADC_ISR->_i2c_lcd_Print_Int
    _i2c_lcd_Print_Int->i2_gotoXY
    i2_gotoXY->i2_sendByte
    i2_sendByte->i2_pulseWrite
    i2_pulseWrite->i2_expanderWrite
    i2_expanderWrite->i2_i2c_lcd_Write

Critical Paths under _main in BANK0

    _main->_gotoXY
    _i2c_lcd_Print->_sendByte
    _i2c_lcd_Init->_sendByte
    _gotoXY->_sendByte
    _sendByte->_pulseWrite
    _pulseWrite->_expanderWrite
    _expanderWrite->_i2c_lcd_Write

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9809
                                             16 BANK0      2     2      0
                           _ADC_Init
                             _gotoXY
                       _i2c_lcd_Init
                      _i2c_lcd_Print
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_Print                                        2     0      2    3089
                                              9 BANK0      2     0      2
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_Init                                         0     0      0    3418
                    _I2C_Master_Init
                         _delay_loop
                           _sendByte
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      4     0      4      90
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               7     6      1    3302
                                              9 BANK0      7     6      1
                           _sendByte
 ---------------------------------------------------------------------------------
 (2) _sendByte                                             5     4      1    2844
                                              4 BANK0      5     4      1
                         _delay_loop
                      _expanderWrite
                         _pulseWrite
 ---------------------------------------------------------------------------------
 (3) _pulseWrite                                           1     1      0     614
                                              3 BANK0      1     1      0
                         _delay_loop
                      _expanderWrite
 ---------------------------------------------------------------------------------
 (4) _expanderWrite                                        1     1      0      62
                                              2 BANK0      1     1      0
                      _i2c_lcd_Write
 ---------------------------------------------------------------------------------
 (5) _i2c_lcd_Write                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _delay_loop                                           2     0      2     484
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0    3842
                                             30 COMRAM    14    14      0
                            _ADC_ISR
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              2     2      0    3842
                                             28 COMRAM     2     2      0
                  _i2c_lcd_Print_Int
                            _readADC
 ---------------------------------------------------------------------------------
 (8) _readADC                                              5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _i2c_lcd_Print_Int                                   12     8      4    3798
                                             16 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                             ___wmul
                           i2_gotoXY
                         i2_sendByte
 ---------------------------------------------------------------------------------
 (9) i2_gotoXY                                             7     6      1     918
                                              9 COMRAM     7     6      1
                         i2_sendByte
 ---------------------------------------------------------------------------------
 (9) i2_sendByte                                           5     4      1     803
                                              4 COMRAM     5     4      1
                       i2_delay_loop
                    i2_expanderWrite
                       i2_pulseWrite
 ---------------------------------------------------------------------------------
 (10) i2_pulseWrite                                        1     1      0     191
                                              3 COMRAM     1     1      0
                       i2_delay_loop
                    i2_expanderWrite
 ---------------------------------------------------------------------------------
 (11) i2_expanderWrite                                     1     1      0      44
                                              2 COMRAM     1     1      0
                    i2_i2c_lcd_Write
 ---------------------------------------------------------------------------------
 (12) i2_i2c_lcd_Write                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_delay_loop                                        2     0      2     101
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _gotoXY
     _sendByte
       _delay_loop
       _expanderWrite
         _i2c_lcd_Write
       _pulseWrite
         _delay_loop
         _expanderWrite
           _i2c_lcd_Write
   _i2c_lcd_Init
     _I2C_Master_Init
     _delay_loop
     _sendByte
       _delay_loop
       _expanderWrite
         _i2c_lcd_Write
       _pulseWrite
         _delay_loop
         _expanderWrite
           _i2c_lcd_Write
   _i2c_lcd_Print
     _sendByte
       _delay_loop
       _expanderWrite
         _i2c_lcd_Write
       _pulseWrite
         _delay_loop
         _expanderWrite
           _i2c_lcd_Write

 _high_isr (ROOT)
   _ADC_ISR
     _i2c_lcd_Print_Int
       ___awdiv
       ___awmod
       ___wmul
       i2_gotoXY
         i2_sendByte
           i2_delay_loop
           i2_expanderWrite
             i2_i2c_lcd_Write
           i2_pulseWrite
             i2_delay_loop
             i2_expanderWrite
               i2_i2c_lcd_Write
       i2_sendByte
         i2_delay_loop
         i2_expanderWrite
           i2_i2c_lcd_Write
         i2_pulseWrite
           i2_delay_loop
           i2_expanderWrite
             i2_i2c_lcd_Write
     _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     12      12       4       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      39       1       60.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B       9        0.0%
DATA                 0      0      4B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Sep 28 21:55:55 2017

                                                                    l51 0B4A  
                                                                    l54 0B62  
                                                                    l48 0B34  
                                                                    l57 0B7A  
                                                                    l94 0C98  
                                                          ___awdiv@sign 0006  
                                                           __CFG_BOR$ON 000000  
                                                   ___wmul@multiplicand 0003  
                                                          __CFG_CP0$OFF 000000  
                                                          __CFG_CP1$OFF 000000  
                                                          __CFG_CP2$OFF 000000  
                                                          __CFG_CP3$OFF 000000  
                                                           __CFG_OSC$HS 000000  
                                                         _i2c_lcd_Print 0CE8  
                                                         _i2c_lcd_Write 0B2E  
                                                          __CFG_CPB$OFF 000000  
                                                          __CFG_CPD$OFF 000000  
                                                       __end_of_ADC_ISR 09C2  
                                                          __CFG_BORV$45 000000  
                                                          ___awmod@sign 0006  
                                                                   prod 000FF3  
                                                                   wreg 000FE8  
                                                          __CFG_LVP$OFF 000000  
                                                         ?_i2c_lcd_Init 0001  
                                                          __CFG_WDT$OFF 000000  
                                                                  l1633 0DE8  
                                                                  l1721 0CEC  
                                                                  l1635 0DF2  
                                                                  l1733 0C68  
                                                                  l1725 0D0C  
                                                                  l1671 0770  
                                                                  l1693 07CA  
                                                                  l1677 0786  
                                                                  l1785 0A96  
                                                                  l1699 07E0  
                                                 i2pulseWrite@portPulse 0004  
                                                                  STR_1 0601  
                                                                  STR_2 0607  
                                                                  u1227 0AA8  
                                                                  i2l51 0BAC  
                                                                  i2l54 0BC2  
                                                                  i2l48 0B98  
                                                                  i2l57 0BD8  
                                              __size_ofi2_i2c_lcd_Write 005C  
                                                                  i2l94 0CE2  
                                                      ?i2_expanderWrite 0001  
                                                                  _main 0A46  
                                                                  _res1 0034  
                                                                  _res2 0032  
                                                                  fsr0h 000FEA  
                                                                  fsr1h 000FE2  
                                                                  fsr2h 000FDA  
                                                                  fsr0l 000FE9  
                                                                  indf2 000FDF  
                                                                  fsr1l 000FE1  
                                                                  fsr2l 000FD9  
                                                                  btemp 003A  
                                                      __end_of_ADC_Init 0E64  
                                                                  prodh 000FF4  
                                                                  prodl 000FF3  
                                                                  start 0088  
                                                            i2_sendByte 07FC  
                                                          ___param_bank 000000  
                                                  __end_ofi2_pulseWrite 0DE4  
                                                      ?_I2C_Master_Init 0060  
                                                         __CFG_OSCS$OFF 000000  
                                                        ?_i2c_lcd_Print 0069  
                                                 __size_ofi2_delay_loop 001C  
                                                        ?_i2c_lcd_Write 0001  
                                                                 ?_main 0001  
                                                       __end_of___awdiv 092C  
                                                       __end_of___awmod 0A46  
                                                       ___awdiv@divisor 0003  
                                                                 i2l119 0722  
                                                                 i2l144 0C42  
                                                       ___awdiv@counter 0005  
                                                         __CFG_PWRT$OFF 000000  
                                                         __CFG_WRT0$OFF 000000  
                                                         __CFG_WRT1$OFF 000000  
                                                         __CFG_WRT2$OFF 000000  
                                                         __CFG_WRT3$OFF 000000  
                                                        __CFG_EBTR0$OFF 000000  
                                                        __CFG_EBTR1$OFF 000000  
                                                        __CFG_EBTR2$OFF 000000  
                                                        __CFG_EBTR3$OFF 000000  
                                                         __CFG_STVR$OFF 000000  
                                                         __CFG_WRTB$OFF 000000  
                                                         __CFG_WRTC$OFF 000000  
                                                         __CFG_WRTD$OFF 000000  
                                                        ??_i2c_lcd_Init 0069  
                                                       __end_of_readADC 0C48  
                                                        __CFG_EBTRB$OFF 000000  
                                                                 pclath 000FFA  
                                                                 tablat 000FF5  
                                                                 plusw1 000FE3  
                                                                 plusw2 000FDB  
                                                                 status 000FD8  
                                                      __end_ofi2_gotoXY 0CE8  
                                                       i2gotoXY@LcdType 000C  
                                                          i2_delay_loop 0E06  
                                                       __initialization 0D28  
                                                          __end_of_main 0ABC  
                                                             ??_ADC_ISR 001D  
                                                                ??_main 0070  
                                                         __activetblptr 000001  
                                                           gotoXY@F7070 0036  
                                                                _ADCON0 000FC2  
                                                                _ADCON1 000FC1  
                                                                _ADRESH 000FC4  
                                                                _ADRESL 000FC3  
                                                      ___awdiv@dividend 0001  
                                                                i2l1211 0E0A  
                                                                i2l1213 0E12  
                                                                i2l1331 08D4  
                                                                i2l1333 08DE  
                                                                i2l1325 08BC  
                                                                i2l1351 091E  
                                                                i2l1343 0902  
                                                                i2l1335 08E4  
                                                                i2l1319 08AA  
                                                                i2l1263 082C  
                                                                i2l1505 0C04  
                                                                i2l1347 090E  
                                                                i2l1371 09F6  
                                                                i2l1363 09D8  
                                                                i2l1291 087C  
                                                                i2l1373 0A00  
                                                                i2l1285 086C  
                                                                i2l1269 083C  
                                                                i2l1375 0A06  
                                                                i2l1383 0A28  
                                                                i2l1367 09E6  
                                                                i2l1471 066E  
                                                                i2l1387 0A38  
                                                                i2l1379 0A1C  
                                                                i2l1483 06C8  
                                                                i2l1397 0CBA  
                                                                i2l1493 0700  
                                                                i2l1485 06CC  
                                                                i2l1477 06B6  
                                                                i2l1469 0660  
                                                                i2l1487 06E6  
                                                                i2l1489 06F0  
                                                        __CFG_WDTPS$128 000000  
                                                                _SSPADD 000FC8  
                                                                _SSPBUF 000FC9  
                                                           ?i2_sendByte 0005  
                                                     ??i2_i2c_lcd_Write 0001  
                                                      __end_of_high_isr 0088  
                                                                ___wmul 0D96  
                                                             ??___awdiv 0005  
                                                             ??___awmod 0005  
                                                       ??_i2c_lcd_Print 006B  
                                                       ??_i2c_lcd_Write 0060  
                                                                _gotoXY 0C48  
                                                                clear_0 0D4E  
                                                      ___awdiv@quotient 0007  
                                                       ___awmod@divisor 0003  
                                                       ___awmod@counter 0005  
                                                      __end_of_sendByte 07FC  
                                             sendByte@mask_lower_nibble 0066  
                                                             ??_readADC 0003  
                                                          __pdataCOMRAM 0036  
                                                             ?_ADC_Init 0001  
                                                          __mediumconst 0000  
                                                                tblptrh 000FF7  
                                                                tblptrl 000FF6  
                                                                tblptru 000FF8  
                                                   pulseWrite@portPulse 0063  
                                                            __accesstop 0060  
                                               __end_of__initialization 0D54  
                                                         ___rparam_used 000001  
                                                 __size_ofi2_pulseWrite 0024  
                                                        __pcstackCOMRAM 0001  
                                                  __end_of_i2c_lcd_Init 0B2E  
                                                i2expanderWrite@cmdData 0003  
                                                __size_of_expanderWrite 0014  
                                                            ??_ADC_Init 0060  
                                                             ?i2_gotoXY 000A  
                                                   __size_ofi2_sendByte 0098  
                                                          i2_pulseWrite 0DC0  
                                                     _i2c_lcd_Print_Int 060E  
                                                    ?_i2c_lcd_Print_Int 0011  
                                                            _delay_loop 0DE4  
                                                         sendByte@_data 0068  
                                                               ?___wmul 0001  
                                                   ??_i2c_lcd_Print_Int 0015  
                                                               ?_gotoXY 0069  
                                                               _ADC_ISR 092C  
                                                            ??i2_gotoXY 000B  
                                                               i2u92_41 061C  
                                                               _SSPCON1 000FC6  
                                                               _SSPCON2 000FC5  
                                                             ?_high_isr 0001  
                                                               _SSPSTAT 000FC7  
                                             __end_of_i2c_lcd_Print_Int 0728  
                                                         _expanderWrite 0E3C  
                                                             ?_sendByte 0064  
                                                               __Hparam 0000  
                                                               __Lparam 0000  
                                              __size_ofi2_expanderWrite 0010  
                                                               ___awdiv 0894  
                                                               ___awmod 09C2  
                                                       __size_of___wmul 002A  
                                                          __psmallconst 0600  
                                                               __pcinit 0D28  
                                                       __size_of_gotoXY 0056  
                                                               __ramtop 0600  
                                                               __ptext0 0A46  
                                                               __ptext1 0CE8  
                                                               __ptext2 0ABC  
                                                               __ptext3 0E22  
                                                               __ptext4 0C48  
                                                               __ptext5 0728  
                                                               __ptext6 0D66  
                                                               __ptext7 0E3C  
                                                               __ptext8 0B2E  
                                                               __ptext9 0DE4  
                                                               _readADC 0BF0  
                                                      ___awmod@dividend 0001  
                                              __size_of_I2C_Master_Init 001A  
                                                       i2_i2c_lcd_Write 0B94  
                                                            ??_high_isr 001F  
                                                        ?_expanderWrite 0001  
                                                  end_of_initialization 0D54  
                                                               gotoXY@X 006F  
                                                               gotoXY@Y 0069  
                                                 __size_of_i2c_lcd_Init 0072  
                                                          ??i2_sendByte 0006  
                                                            ??_sendByte 0065  
                                                           ?_delay_loop 0060  
                                                               postdec1 000FE5  
                                                               postinc0 000FEE  
                                                      i2c_lcd_Print@str 0069  
                                                             _PORTBbits 000F81  
                                                      delay_loop@nCount 0060  
                                                             _TRISAbits 000F92  
                                                             _TRISBbits 000F93  
                                                             _TRISCbits 000F94  
                                                    __end_ofi2_sendByte 0894  
                                                     __size_of_ADC_Init 0014  
                                                            _pulseWrite 0D66  
                                                      i2c_lcd_Write@cmd 0061  
                                                          _i2c_lcd_Init 0ABC  
                                            __size_of_i2c_lcd_Print_Int 011A  
                                                        __end_of___wmul 0DC0  
                                                         __pidataCOMRAM 0E74  
                                                             i2gotoXY@X 0010  
                                                             i2gotoXY@Y 000A  
                                                 __end_of_i2c_lcd_Print 0D28  
                                                 __end_of_i2c_lcd_Write 0B94  
                                                        __end_of_gotoXY 0C9E  
                                                     ??i2_expanderWrite 0003  
                                               __end_ofi2_i2c_lcd_Write 0BF0  
                                      i2sendByte@swap_mask_Lower_nibble 0006  
                                        sendByte@swap_mask_Lower_nibble 0065  
                                                   start_initialization 0D28  
                                                       ??_expanderWrite 0062  
                                                   __size_of_delay_loop 0022  
                                                     __size_ofi2_gotoXY 004A  
                                                     ??_I2C_Master_Init 0064  
                                                              ??___wmul 0005  
                                                              ??_gotoXY 006A  
                                                              ?_ADC_ISR 0001  
                                          i2c_lcd_Print_Int@numOfDigits 0014  
                                                           __pbssCOMRAM 002D  
                                                         __pcstackBANK0 0060  
                                                           ?_pulseWrite 0001  
                                                     __size_of_high_isr 0080  
                                                         ?i2_delay_loop 0001  
                                                             __pintcode 0008  
                                                     __size_of_sendByte 00D4  
                                                          sendByte@byte 0067  
                                                          sendByte@mode 0064  
                                                              ?___awdiv 0001  
                                                              ?___awmod 0001  
                                                  expanderWrite@cmdData 0062  
                                           i2sendByte@mask_lower_nibble 0007  
                                                              ?_readADC 0001  
                                                           __smallconst 0600  
                                                      ?i2_i2c_lcd_Write 0001  
                                                  i2c_lcd_Print_Int@val 0012  
                                                              _ADC_Init 0E50  
                                                  i2c_lcd_Print_Int@str 0015  
                                                         gotoXY@LcdType 006B  
                                                        ___wmul@product 0005  
                                                              _PIE1bits 000F9D  
                                                        ??i2_delay_loop 0003  
                                                          ??_delay_loop 0062  
                                                              i2u123_47 0934  
                                                              i2u124_47 096C  
                                                              i2u125_47 09AA  
                                                              i2u126_47 0C24  
                                                              _PIR1bits 000F9E  
                                                   __size_of_pulseWrite 0030  
                                                      __size_of_ADC_ISR 0096  
                                                            _ADCON0bits 000FC2  
                                                     ___wmul@multiplier 0001  
                                                       i2sendByte@_data 0009  
                                                i2c_lcd_Print_Int@F7085 002D  
                                                              i2_gotoXY 0C9E  
                                                    __end_of_delay_loop 0E06  
                                                             copy_data0 0D3C  
                                                              __Hrparam 0000  
                                                       i2_expanderWrite 0E64  
                                                              __Lrparam 0000  
                                                          __Lsmallconst 0600  
                                                      __size_of___awdiv 0098  
                                                      __size_of___awmod 0084  
                                                        readADC@channel 0005  
                                                       _I2C_Master_Init 0E22  
                                                      __size_of_readADC 0058  
                                                              __ptext10 0E50  
                                                              __ptext20 0E06  
                                                              __ptext12 092C  
                                                              __ptext21 0D96  
                                                              __ptext13 0BF0  
                                                              __ptext22 09C2  
                                                              __ptext14 060E  
                                                              __ptext23 0894  
                                                              __ptext15 0C9E  
                                                              __ptext16 07FC  
                                                              __ptext17 0DC0  
                                                              __ptext18 0E64  
                                                              __ptext19 0B94  
                                                    i2delay_loop@nCount 0001  
                                                         ?i2_pulseWrite 0001  
                                                              _high_isr 0008  
                                                         __size_of_main 0076  
                                                    i2i2c_lcd_Write@cmd 0002  
                                                              _sendByte 0728  
                                                              int$flags 003A  
                                                        i2sendByte@byte 0008  
                                                        i2sendByte@mode 0005  
                                                    I2C_Master_Init@clk 0060  
                                                            _INTCONbits 000FF2  
                                                  __end_ofi2_delay_loop 0E22  
                                                        ??i2_pulseWrite 0004  
                                                          ??_pulseWrite 0063  
                                                 __end_of_expanderWrite 0E50  
                                                              intlevel2 0E78  
                                               __end_ofi2_expanderWrite 0E74  
                                                __size_of_i2c_lcd_Print 0040  
                                                __size_of_i2c_lcd_Write 0066  
                                                    i2c_lcd_Print_Int@X 001A  
                                                    i2c_lcd_Print_Int@Y 0011  
                                                    i2c_lcd_Print_Int@i 001C  
                                                    i2c_lcd_Print_Int@j 001B  
                                               __end_of_I2C_Master_Init 0E3C  
                                                    __end_of_pulseWrite 0D96  
                                                           _SSPCON2bits 000FC5  
